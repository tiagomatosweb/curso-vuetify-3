{"version":3,"file":"VTreeview.mjs","names":["VTreeviewNode","VTreeviewNodeProps","Themeable","provide","RegistrableProvide","arrayDiff","deepEqual","getObjectValueByPath","mixins","consoleWarn","filterTreeItems","filterTreeItem","extend","name","treeview","props","active","type","Array","default","dense","Boolean","disabled","filter","Function","hoverable","items","multipleActive","open","openAll","returnObject","search","String","value","data","level","activeCache","Set","nodes","openCache","selectedCache","computed","excludedItems","excluded","i","length","itemKey","itemText","itemChildren","watch","handler","oldKeys","Object","keys","map","k","item","newKeys","getKeys","diff","forEach","oldSelectedCache","buildTree","emitSelected","deep","handleNodeCacheWatcher","updateActive","emitActive","updateSelected","updateOpen","emitOpen","created","getValue","key","mounted","$slots","prepend","append","updateAll","methods","push","children","parent","oldNode","hasOwnProperty","isSelected","isIndeterminate","isActive","isOpen","vnode","node","c","selectionType","calculateState","add","updateVnodeState","state","counts","reduce","child","emitNodeCache","event","cache","$emit","updateFn","emitFn","v","old","getDescendants","descendants","getParents","parents","register","unregister","isParent","delete","isForced","changed","Map","descendant","itemDisabled","set","calculated","entries","hasLoaded","checkChildren","then","isExcluded","has","render","h","genChild","options","bind","staticClass","class","themeClasses"],"sources":["../../../src/components/VTreeview/VTreeview.ts"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    disabled: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren) ?? []\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (\n          this.selectionType !== 'independent' &&\n          parent !== null &&\n          !this.nodes.hasOwnProperty(key) &&\n          this.nodes.hasOwnProperty(parent)\n        ) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length && this.selectionType !== 'independent') {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, this.disabled || getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n"],"mappings":"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"}
{"version":3,"file":"VSelect.mjs","names":["filterVTextFieldProps","makeVTextFieldProps","VCheckboxBtn","VChip","VDefaultsProvider","VDialogTransition","VList","VListItem","VMenu","VTextField","forwardRefs","IconValue","makeItemsProps","useItems","makeTransitionProps","useForm","useLocale","useProxiedModel","computed","mergeProps","ref","deepEqual","genericComponent","omit","propsFactory","useRender","wrapInArray","makeSelectProps","chips","Boolean","closableChips","eager","hideNoData","hideSelected","menu","menuIcon","type","default","menuProps","Object","multiple","noDataText","String","openOnClear","valueComparator","Function","itemChildren","VSelect","name","props","modelValue","transition","component","emits","val","setup","slots","t","vTextFieldRef","vMenuRef","_menu","get","value","set","v","ΨopenChildren","items","transformIn","transformOut","model","transformed","form","selections","map","find","item","selected","selection","displayItems","filter","some","s","listRef","onClear","e","onMousedownControl","length","readonly","isReadonly","onKeydown","includes","key","preventDefault","focus","select","index","findIndex","splice","onBlur","$el","contains","relatedTarget","onFocusout","hasChips","chip","hasList","prepend","append","textFieldProps","join","externalValue","onClick","isSelected","undefined","onChipClose","stopPropagation","slotProps","title","closable","size","text"],"sources":["../../../src/components/VSelect/VSelect.tsx"],"sourcesContent":["// Styles\nimport './VSelect.sass'\n\n// Components\nimport { filterVTextFieldProps, makeVTextFieldProps } from '@/components/VTextField/VTextField'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VDialogTransition } from '@/components/transitions'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/items'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useForm } from '@/composables/form'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, mergeProps, ref } from 'vue'\nimport { deepEqual, genericComponent, omit, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { InternalItem } from '@/composables/items'\nimport type { MakeSlots, SlotsToProps } from '@/util'\nimport type { PropType } from 'vue'\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'v-select')\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = T extends Primitive\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject>\n\nexport const VSelect = genericComponent<new <\n  T,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<T, ReturnObject, Multiple> = Value<T, ReturnObject, Multiple>\n>() => {\n  $props: {\n    items?: readonly T[]\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V\n    'onUpdate:modelValue'?: (val: V) => void\n  } & SlotsToProps<\n    Omit<VInputSlots & VFieldSlots, 'default'> & MakeSlots<{\n      item: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      chip: [{ item: InternalItem<T>, index: number, props: Record<string, unknown> }]\n      selection: [{ item: InternalItem<T>, index: number }]\n      'prepend-item': []\n      'append-item': []\n      'no-data': []\n    }>\n  >\n}>()({\n  name: 'VSelect',\n\n  props: {\n    ...makeSelectProps(),\n    ...omit(makeVTextFieldProps({\n      modelValue: null,\n    }), ['validationValue', 'dirty', 'appendInnerIcon']),\n    ...makeTransitionProps({ transition: { component: VDialogTransition } }),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n    'update:menu': (val: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const form = useForm()\n    const selections = computed(() => {\n      return model.value.map(v => {\n        return items.value.find(item => props.valueComparator(item.value, v.value)) || v\n      })\n    })\n    const selected = computed(() => selections.value.map(selection => selection.props.value))\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !selections.value.some(s => s === item))\n      }\n      return items.value\n    })\n\n    const listRef = ref<VList>()\n\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (\n        (props.hideNoData && !items.value.length) ||\n        props.readonly || form?.isReadonly.value\n      ) return\n\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'ArrowDown') {\n        listRef.value?.focus('next')\n      } else if (e.key === 'ArrowUp') {\n        listRef.value?.focus('prev')\n      } else if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n    }\n    function select (item: InternalItem) {\n      if (props.multiple) {\n        const index = selected.value.findIndex(selection => props.valueComparator(selection, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n        menu.value = false\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onFocusout (e: FocusEvent) {\n      if (e.relatedTarget == null) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!((!props.hideNoData || displayItems.value.length) || slots.prepend || slots.append || slots['no-data'])\n      const [textFieldProps] = filterVTextFieldProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ v => { if (v == null) model.value = [] } }\n          validationValue={ model.externalValue }\n          dirty={ model.value.length > 0 }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n            },\n          ]}\n          appendInnerIcon={ props.menuIcon }\n          readonly\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onFocusout={ onFocusout }\n                    >\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      { slots['prepend-item']?.() }\n\n                      { displayItems.value.map((item, index) => {\n                        if (slots.item) {\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: mergeProps(item.props, { onClick: () => select(item) }),\n                          })\n                        }\n\n                        return (\n                          <VListItem\n                            key={ index }\n                            { ...item.props }\n                            onClick={ () => select(item) }\n                          >\n                            {{\n                              prepend: ({ isSelected }) => props.multiple && !props.hideSelected ? (\n                                <VCheckboxBtn modelValue={ isSelected } ripple={ false } />\n                              ) : undefined,\n                            }}\n                          </VListItem>\n                        )\n                      })}\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { selections.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slots.chip?.({ item, index, props: slotProps }) }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slots.selection?.({ item, index }) ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < selections.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n"],"mappings":"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"}
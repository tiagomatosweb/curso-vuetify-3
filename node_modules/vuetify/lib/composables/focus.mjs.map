{"version":3,"file":"focus.mjs","names":["useProxiedModel","computed","getCurrentInstanceName","propsFactory","makeFocusProps","focused","Boolean","useFocus","props","name","isFocused","focusClasses","value","focus","blur"],"sources":["../../src/composables/focus.ts"],"sourcesContent":["// Components\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nexport interface FocusProps {\n  focused: boolean\n  'onUpdate:focused': ((val: boolean) => void) | undefined\n}\n\n// Composables\nexport const makeFocusProps = propsFactory({\n  focused: Boolean,\n}, 'focus')\n\nexport function useFocus (\n  props: FocusProps,\n  name = getCurrentInstanceName()\n) {\n  const isFocused = useProxiedModel(props, 'focused')\n  const focusClasses = computed(() => {\n    return ({\n      [`${name}--focused`]: isFocused.value,\n    })\n  })\n\n  function focus () {\n    isFocused.value = true\n  }\n\n  function blur () {\n    isFocused.value = false\n  }\n\n  return { focusClasses, isFocused, focus, blur }\n}\n"],"mappings":"AAAA;AAAA,SACSA,eAAe,8BAExB;AACA,SAASC,QAAQ,QAAQ,KAAK;AAAA,SACrBC,sBAAsB,EAAEC,YAAY,6BAE7C;AAMA;AACA,OAAO,MAAMC,cAAc,GAAGD,YAAY,CAAC;EACzCE,OAAO,EAAEC;AACX,CAAC,EAAE,OAAO,CAAC;AAEX,OAAO,SAASC,QAAQ,CACtBC,KAAiB,EAEjB;EAAA,IADAC,IAAI,uEAAGP,sBAAsB,EAAE;EAE/B,MAAMQ,SAAS,GAAGV,eAAe,CAACQ,KAAK,EAAE,SAAS,CAAC;EACnD,MAAMG,YAAY,GAAGV,QAAQ,CAAC,MAAM;IAClC,OAAQ;MACN,CAAE,GAAEQ,IAAK,WAAU,GAAGC,SAAS,CAACE;IAClC,CAAC;EACH,CAAC,CAAC;EAEF,SAASC,KAAK,GAAI;IAChBH,SAAS,CAACE,KAAK,GAAG,IAAI;EACxB;EAEA,SAASE,IAAI,GAAI;IACfJ,SAAS,CAACE,KAAK,GAAG,KAAK;EACzB;EAEA,OAAO;IAAED,YAAY;IAAED,SAAS;IAAEG,KAAK;IAAEC;EAAK,CAAC;AACjD"}
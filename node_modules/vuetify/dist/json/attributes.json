{
  "v-app/full-height": {
    "type": "boolean",
    "description": "Sets the component height to 100%"
  },
  "v-app/overlaps": {
    "type": "string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/layout.json))"
  },
  "v-app/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-app-bar/flat": {
    "type": "boolean",
    "description": "Removes the component's **box-shadow**."
  },
  "v-app-bar/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-app-bar/name": {
    "type": "string",
    "description": "Assign a specific name for layout registration."
  },
  "v-app-bar/image": {
    "type": "string",
    "description": "Specifies a [v-img](/components/images) as the component's background."
  },
  "v-app-bar/title": {
    "type": "string",
    "description": "Specify a title text for the component."
  },
  "v-app-bar/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-app-bar/location": {
    "type": "\"top\" | \"bottom\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-app-bar.json))"
  },
  "v-app-bar/absolute": {
    "type": "boolean",
    "description": "Applies position: absolute to the component."
  },
  "v-app-bar/collapse": {
    "type": "boolean",
    "description": "Morphs the component into a collapsed state, reducing its maximum width."
  },
  "v-app-bar/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-app-bar/density": {
    "type": "\"default\" | \"prominent\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-app-bar/extended": {
    "type": "boolean",
    "description": "Use this prop to increase the height of the toolbar _without_ using the `extension` slot for adding content. May be used in conjunction with the **extension-height** prop, and any of the other props that affect the height of the toolbar, e.g. **prominent**, **dense**, etc., **WITH THE EXCEPTION** of **height**."
  },
  "v-app-bar/extension-height": {
    "type": "string | number",
    "description": "Designate an explicit height for the `extension` slot."
  },
  "v-app-bar/floating": {
    "type": "boolean",
    "description": "Applies **display: inline-flex** to the component."
  },
  "v-app-bar/height": {
    "type": "string | number",
    "description": "Designates a specific height for the toolbar. Overrides the heights imposed by other props, e.g. **prominent**, **dense**, **extended**, etc."
  },
  "v-app-bar/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-app-bar/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-app-bar/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-app-bar/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-app-bar/order": {
    "type": "string | number",
    "description": "Adjust the order of the component in relation to its registration order."
  },
  "v-app-bar-nav-icon/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-app-bar-title/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-app-bar-title/text": {
    "type": "string",
    "description": "Specify content text for the component."
  },
  "v-alert/type": {
    "type": "\"success\" | \"warning\" | \"error\" | \"info\"",
    "description": "Create a specialized alert that uses a contextual color and has a pre-defined icon."
  },
  "v-alert/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-alert/position": {
    "type": "\"relative\" | \"absolute\" | \"static\" | \"fixed\" | \"sticky\"",
    "description": "Specifies the type of positioning method used for the component."
  },
  "v-alert/title": {
    "type": "string",
    "description": "Specify a title text for the component."
  },
  "v-alert/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-alert/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/location.json))"
  },
  "v-alert/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-alert/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-alert/prominent": {
    "type": "boolean",
    "description": "Displays a larger vertically centered icon to draw more attention."
  },
  "v-alert/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-alert/border": {
    "type": "boolean | \"top\" | \"bottom\" | \"end\" | \"start\"",
    "description": "Adds a colored border to the component."
  },
  "v-alert/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-alert/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-alert/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-alert/icon": {
    "type": "false | string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-alert/text": {
    "type": "string",
    "description": "Specify content text for the component."
  },
  "v-alert/border-color": {
    "type": "string",
    "description": "Specifies the color of the border. Accepts any color value."
  },
  "v-alert/closable": {
    "type": "boolean",
    "description": "Adds a close icon that can hide the alert."
  },
  "v-alert/close-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Change the default icon used for **closable** alerts."
  },
  "v-alert/close-label": {
    "type": "string",
    "description": "Text used for *aria-label* on **closable** alerts. Can also be customized globally in [Internationalization](/customization/internationalization)."
  },
  "v-alert/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-alert/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-alert/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-alert/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-alert/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-alert/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-alert-title/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-autocomplete/type": {
    "type": "string",
    "description": "Sets input type"
  },
  "v-autocomplete/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-autocomplete/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-autocomplete/reverse": {
    "type": "boolean",
    "description": "Reverses the input orientation"
  },
  "v-autocomplete/id": {
    "type": "string",
    "description": "Sets the DOM id on the component"
  },
  "v-autocomplete/items": {
    "type": "unknown[]",
    "description": "Can be an array of objects or array of strings. When using objects, will look for a title, value and disabled keys. This can be changed using the **item-title**, **item-value** and **item-disabled** props.  Objects that have a **header** or **divider** property are considered special cases and generate a list header or divider; these items are not selectable."
  },
  "v-autocomplete/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-autocomplete/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-autocomplete/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-autocomplete/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-autocomplete/variant": {
    "type": "\"outlined\" | \"plain\" | \"underlined\" | \"filled\" | \"solo\"",
    "description": "Applies a distinct style to the component"
  },
  "v-autocomplete/search": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-autocomplete.json))"
  },
  "v-autocomplete/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-autocomplete/filter-mode": {
    "type": "\"every\" | \"some\" | \"union\" | \"intersection\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-autocomplete/no-filter": {
    "type": "boolean",
    "description": "Do not apply filtering when searching. Useful when data is being filtered server side"
  },
  "v-autocomplete/custom-filter": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L20-L20\" target=\"_blank\">FilterFunction</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-autocomplete/custom-key-filter": {
    "type": "{ [string]: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L20-L20\" target=\"_blank\">FilterFunction</a> }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-autocomplete/filter-keys": {
    "type": "string | string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-autocomplete/chips": {
    "type": "boolean",
    "description": "Changes display of selections to chips"
  },
  "v-autocomplete/closable-chips": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-autocomplete/eager": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-autocomplete/hide-no-data": {
    "type": "boolean",
    "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open."
  },
  "v-autocomplete/hide-selected": {
    "type": "boolean",
    "description": "Do not display in the select menu items that are already selected"
  },
  "v-autocomplete/menu": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-autocomplete/menu-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-autocomplete/menu-props": {
    "type": "unknown",
    "description": "Pass props through to the `v-menu` component. Accepts an object with anything from [/api/v-menu](/api/v-menu/#props), camelCase keys are recommended."
  },
  "v-autocomplete/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the input"
  },
  "v-autocomplete/transition": {
    "type": "string | boolean",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-autocomplete/multiple": {
    "type": "boolean",
    "description": "Changes select to multiple. Accepts array for value"
  },
  "v-autocomplete/no-data-text": {
    "type": "string",
    "description": "Text shown when no items are provided to the component"
  },
  "v-autocomplete/open-on-clear": {
    "type": "boolean",
    "description": "When using the **clearable** prop, once cleared, the select menu will either open or stay open, depending on the current state"
  },
  "v-autocomplete/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-autocomplete/item-title": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-autocomplete/item-value": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-autocomplete/item-children": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-autocomplete/item-props": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component."
  },
  "v-autocomplete/return-object": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-autocomplete/autofocus": {
    "type": "boolean",
    "description": "Enables autofocus"
  },
  "v-autocomplete/hint": {
    "type": "string",
    "description": "Hint text"
  },
  "v-autocomplete/persistent-hint": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-autocomplete/prefix": {
    "type": "string",
    "description": "Displays prefix text"
  },
  "v-autocomplete/placeholder": {
    "type": "string",
    "description": "Sets the input’s placeholder text"
  },
  "v-autocomplete/persistent-placeholder": {
    "type": "boolean",
    "description": "Forces placeholder to always be visible"
  },
  "v-autocomplete/persistent-counter": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-autocomplete/suffix": {
    "type": "string",
    "description": "Displays suffix text"
  },
  "v-autocomplete/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-autocomplete/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`"
  },
  "v-autocomplete/messages": {
    "type": "string | string[]",
    "description": "Displays a list of messages or message if using a string"
  },
  "v-autocomplete/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-autocomplete/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-autocomplete/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-autocomplete/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-autocomplete/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-autocomplete/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-autocomplete/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-autocomplete/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-autocomplete/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-autocomplete/clearable": {
    "type": "boolean",
    "description": "Allows for the component to be cleared"
  },
  "v-autocomplete/clear-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Applied when using **clearable** and the input is dirty"
  },
  "v-autocomplete/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-autocomplete/persistent-clear": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-autocomplete/prepend-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon inside the component's input, uses the same syntax as `v-icon`"
  },
  "v-autocomplete/single-line": {
    "type": "boolean",
    "description": "Label does not move on focus/dirty"
  },
  "v-autocomplete/loading": {
    "type": "string | boolean",
    "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-autocomplete/counter": {
    "type": "string | number | true",
    "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation."
  },
  "v-autocomplete/counter-value": {
    "type": "(value: any) => number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-avatar/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-avatar/size": {
    "type": "string | number",
    "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**."
  },
  "v-avatar/image": {
    "type": "string",
    "description": "Apply a specific image using [v-img](/components/images/)."
  },
  "v-avatar/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-avatar/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-avatar/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-avatar/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-avatar/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-avatar/end": {
    "type": "boolean",
    "description": "Applies margin at the start of the component."
  },
  "v-avatar/start": {
    "type": "boolean",
    "description": "Applies margin at the end of the component."
  },
  "v-avatar/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-badge/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-badge/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-badge/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "Changes the location of the badge. Possible values are **top**, **bottom**, **start**, **end**, **top start**, **top end**, **bottom start**, **bottom end**."
  },
  "v-badge/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-badge/floating": {
    "type": "boolean",
    "description": "Elevates the badge above the slotted content."
  },
  "v-badge/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-badge/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-badge/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-badge/label": {
    "type": "string",
    "description": "The **aria-label** used for the badge"
  },
  "v-badge/transition": {
    "type": "string",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-badge/bordered": {
    "type": "boolean",
    "description": "Applies a **2px** by default and **1.5px** border around the badge when using the **dot** property."
  },
  "v-badge/dot": {
    "type": "boolean",
    "description": "Reduce the size of the badge and hide its contents."
  },
  "v-badge/inline": {
    "type": "boolean",
    "description": "Moves the badge to be inline with the wrapping element. Supports the usage of the **left** prop."
  },
  "v-badge/text-color": {
    "type": "string",
    "description": "Applies a specified color to the control text - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-badge/content": {
    "type": "string | number",
    "description": "Text content to show in the badge."
  },
  "v-badge/max": {
    "type": "string | number",
    "description": "Sets the maximum number allowed when using the **content** prop with a `number` like value. If the content number exceeds the maximum value, a `+` suffix is added."
  },
  "v-badge/offset-x": {
    "type": "string | number",
    "description": "Offset the badge on the x-axis."
  },
  "v-badge/offset-y": {
    "type": "string | number",
    "description": "Offset the badge on the y-axis."
  },
  "v-banner/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-banner/position": {
    "type": "\"relative\" | \"absolute\" | \"static\" | \"fixed\" | \"sticky\"",
    "description": "Specifies the type of positioning method used for the component."
  },
  "v-banner/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/location.json))"
  },
  "v-banner/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-banner/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-banner/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-banner/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-banner/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-banner/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-banner/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-banner/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-banner/text": {
    "type": "string",
    "description": "Specify content text for the component."
  },
  "v-banner/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-banner/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-banner/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-banner/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-banner/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-banner/sticky": {
    "type": "boolean",
    "description": "Applies **position: sticky** to the component (**Evergreen browsers only**). You can find more information on the [MDN documentation for sticky position](https://developer.mozilla.org/en-US/docs/Web/CSS/position)."
  },
  "v-banner/avatar": {
    "type": "string",
    "description": "Designates a specific src image to pass to the thumbnail."
  },
  "v-banner/stacked": {
    "type": "boolean",
    "description": "Forces the banner actions onto a new line. This is only applicable when the banner is not **single-line** or using the **actions** slot."
  },
  "v-banner/lines": {
    "type": "\"one\" | \"two\" | \"three\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-banner.json))"
  },
  "v-banner-actions/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-banner-actions/density": {
    "type": "string",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-banner-text/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-bottom-navigation/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-bottom-navigation/name": {
    "type": "string",
    "description": "Assign a specific name for layout registration."
  },
  "v-bottom-navigation/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-bottom-navigation/absolute": {
    "type": "boolean",
    "description": "Applies **position: absolute** to the component."
  },
  "v-bottom-navigation/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-bottom-navigation/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-bottom-navigation/height": {
    "type": "string | number",
    "description": "Sets the height for the component"
  },
  "v-bottom-navigation/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-bottom-navigation/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-bottom-navigation/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-bottom-navigation/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-bottom-navigation/order": {
    "type": "string | number",
    "description": "Adjust the order of the component in relation to its registration order."
  },
  "v-bottom-navigation/disabled": {
    "type": "boolean",
    "description": "Puts all children components into a disabled state"
  },
  "v-bottom-navigation/multiple": {
    "type": "boolean",
    "description": "Allows one to select mulitple items."
  },
  "v-bottom-navigation/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-bottom-navigation/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-bottom-navigation/mode": {
    "type": "string",
    "description": "Changes the orientation and active state styling of the component."
  },
  "v-bottom-navigation/max": {
    "type": "number",
    "description": "Sets a maximum number of selections that can be made."
  },
  "v-bottom-navigation/grow": {
    "type": "boolean",
    "description": "Force all [v-btn](/components/buttons) children to take up all available horizontal space."
  },
  "v-bottom-navigation/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-bottom-navigation/mandatory": {
    "type": "boolean | \"force\"",
    "description": "Forces at least one item to always be selected (if available)."
  },
  "v-breadcrumbs/items": {
    "type": "unknown[]",
    "description": "An array of strings or objects used for automatically generating children components"
  },
  "v-breadcrumbs/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-breadcrumbs/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-breadcrumbs/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-breadcrumbs/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-breadcrumbs/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-breadcrumbs/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-breadcrumbs/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-breadcrumbs/divider": {
    "type": "string",
    "description": "Specifies the dividing character between items."
  },
  "v-breadcrumbs/active-class": {
    "type": "string",
    "description": "The class applied to the component when it is in an active state"
  },
  "v-breadcrumbs/active-color": {
    "type": "string",
    "description": "The applied color when the component is in an active state"
  },
  "v-breadcrumbs-item/title": {
    "type": "string",
    "description": "Specify a title text for the component."
  },
  "v-breadcrumbs-item/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-breadcrumbs-item/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-breadcrumbs-item/replace": {
    "type": "boolean",
    "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation."
  },
  "v-breadcrumbs-item/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-breadcrumbs-item/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-breadcrumbs-item/active-class": {
    "type": "string",
    "description": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation"
  },
  "v-breadcrumbs-item/active-color": {
    "type": "string",
    "description": "The applied color when the component is in an active state"
  },
  "v-breadcrumbs-item/href": {
    "type": "string",
    "description": "Designates the component as anchor and applies the **href** attribute."
  },
  "v-breadcrumbs-item/exact": {
    "type": "boolean",
    "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation."
  },
  "v-breadcrumbs-item/to": {
    "type": "unknown",
    "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation."
  },
  "v-btn/symbol": {
    "type": "any",
    "description": "The [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol) used to hook into group functionality for components like [v-btn-toggle](/components/btn-toggle) and [v-bottom-navigation](/components/bottom-navigations/) "
  },
  "v-btn/flat": {
    "type": "boolean",
    "description": "Removes the button box shadow."
  },
  "v-btn/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-btn/value": {
    "type": "any",
    "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used."
  },
  "v-btn/position": {
    "type": "\"relative\" | \"absolute\" | \"static\" | \"fixed\" | \"sticky\"",
    "description": "Specifies the type of positioning method used for the component."
  },
  "v-btn/size": {
    "type": "string | number",
    "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**."
  },
  "v-btn/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/location.json))"
  },
  "v-btn/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-btn/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-btn/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-btn/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-btn/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-btn/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-btn/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-btn/icon": {
    "type": "boolean | string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component. The button will become _round_."
  },
  "v-btn/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-btn/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-btn/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-btn/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-btn/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-btn/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-btn/replace": {
    "type": "boolean",
    "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation."
  },
  "v-btn/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-btn/block": {
    "type": "boolean",
    "description": "Expands the button to 100% of available space."
  },
  "v-btn/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-btn/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content"
  },
  "v-btn/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-btn/loading": {
    "type": "string | boolean",
    "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-btn/stacked": {
    "type": "boolean",
    "description": "Displays the button as a flex-column."
  },
  "v-btn/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-btn/href": {
    "type": "string",
    "description": "Designates the component as anchor and applies the **href** attribute."
  },
  "v-btn/exact": {
    "type": "boolean",
    "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation."
  },
  "v-btn/to": {
    "type": "unknown",
    "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation."
  },
  "v-btn/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-btn-group/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-btn-group/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-btn-group/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-btn-group/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-btn-group/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-btn-group/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-btn-group/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-btn-group/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-btn-group/divided": {
    "type": "boolean",
    "description": "Add dividers between children [v-btn](/components/buttons) components."
  },
  "v-btn-toggle/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-btn-toggle/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-btn-toggle/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-btn-toggle/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-btn-toggle/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-btn-toggle/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-btn-toggle/rounded": {
    "type": "string | number | boolean",
    "description": "Round edge buttons"
  },
  "v-btn-toggle/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-btn-toggle/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-btn-toggle/disabled": {
    "type": "boolean",
    "description": "Puts all children components into a disabled state"
  },
  "v-btn-toggle/multiple": {
    "type": "boolean",
    "description": "Allows one to select mulitple items."
  },
  "v-btn-toggle/max": {
    "type": "number",
    "description": "Sets a maximum number of selections that can be made."
  },
  "v-btn-toggle/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-btn-toggle/mandatory": {
    "type": "boolean | \"force\"",
    "description": "Forces at least one item to always be selected (if available)."
  },
  "v-btn-toggle/divided": {
    "type": "boolean",
    "description": "Add dividers between children [v-btn](/components/buttons) components."
  },
  "v-card/flat": {
    "type": "boolean",
    "description": "Removes the card's elevation."
  },
  "v-card/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-card/position": {
    "type": "\"relative\" | \"absolute\" | \"static\" | \"fixed\" | \"sticky\"",
    "description": "Specifies the type of positioning method used for the component."
  },
  "v-card/image": {
    "type": "string",
    "description": "Apply a specific background image to the component."
  },
  "v-card/title": {
    "type": "string",
    "description": "Specify a title text for the component."
  },
  "v-card/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/location.json))"
  },
  "v-card/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-card/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-card/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-card/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-card/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-card/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-card/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-card/text": {
    "type": "string",
    "description": "Specify content text for the component."
  },
  "v-card/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-card/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-card/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-card/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-card/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-card/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-card/replace": {
    "type": "boolean",
    "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation."
  },
  "v-card/link": {
    "type": "boolean",
    "description": "Designates that the component is a link. This is automatic when using the href or to prop."
  },
  "v-card/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-card/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-card/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends a [v-icon](/components/icons/) component to the header"
  },
  "v-card/loading": {
    "type": "string | boolean",
    "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-card/href": {
    "type": "string",
    "description": "Designates the component as anchor and applies the **href** attribute."
  },
  "v-card/exact": {
    "type": "boolean",
    "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation."
  },
  "v-card/to": {
    "type": "unknown",
    "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation."
  },
  "v-card/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-card/subtitle": {
    "type": "string",
    "description": "Specify a subtitle text for the component."
  },
  "v-card/append-avatar": {
    "type": "string",
    "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot"
  },
  "v-card/hover": {
    "type": "boolean",
    "description": "Applies **4dp** of elevation when hovered (default 2dp). You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-card/prepend-avatar": {
    "type": "string",
    "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content"
  },
  "v-card-item/title": {
    "type": "string",
    "description": "Specify a title text for the component."
  },
  "v-card-item/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-card-item/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-card-item/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content"
  },
  "v-card-item/subtitle": {
    "type": "string",
    "description": "Specify a subtitle text for the component."
  },
  "v-card-item/append-avatar": {
    "type": "string",
    "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot"
  },
  "v-card-item/prepend-avatar": {
    "type": "string",
    "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content"
  },
  "v-card-subtitle/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-card-text/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-card-title/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-carousel/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-carousel/color": {
    "type": "string",
    "description": "Applies a color to the navigation dots - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-carousel/height": {
    "type": "string | number",
    "description": "Sets the height for the component"
  },
  "v-carousel/cycle": {
    "type": "boolean",
    "description": "Determines if the carousel should cycle through images."
  },
  "v-carousel/hide-delimiters": {
    "type": "boolean",
    "description": "Hides the carousel's bottom delimiters."
  },
  "v-carousel/hide-delimiter-background": {
    "type": "boolean",
    "description": "Hides the bottom delimiter background."
  },
  "v-carousel/delimiter-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Sets icon for carousel delimiter"
  },
  "v-carousel/interval": {
    "type": "string | number",
    "description": "The duration between image cycles. Requires the **cycle** prop."
  },
  "v-carousel/progress": {
    "type": "string | boolean",
    "description": "Displays a carousel progress bar. Requires the **cycle** prop and **interval**."
  },
  "v-carousel/show-arrows": {
    "type": "string | boolean",
    "description": "Displays arrows for next/previous navigation."
  },
  "v-carousel/vertical-delimiters": {
    "type": "boolean | \"left\" | \"right\"",
    "description": "Displays carousel delimiters vertically."
  },
  "v-carousel-item/value": {
    "type": "any",
    "description": "MISSING DESCRIPTION"
  },
  "v-checkbox/type": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-checkbox/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-checkbox/value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-checkbox/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox/error": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-checkbox/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-checkbox/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-checkbox/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-checkbox/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-checkbox/multiple": {
    "type": "boolean",
    "description": "Changes expected model to an array"
  },
  "v-checkbox/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-checkbox/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-checkbox/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the component, uses the same syntax as `v-icon`"
  },
  "v-checkbox/messages": {
    "type": "string | string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-checkbox/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-checkbox/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-checkbox/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-checkbox/readonly": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-checkbox/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-checkbox/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-checkbox/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-checkbox/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-checkbox/inline": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-checkbox/indeterminate": {
    "type": "boolean",
    "description": "Sets an indeterminate state for the checkbox"
  },
  "v-checkbox/indeterminate-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon used when in an indeterminate state"
  },
  "v-checkbox/true-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-checkbox/false-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-checkbox/false-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon used when inactive"
  },
  "v-checkbox/true-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon used when active"
  },
  "v-checkbox-btn/type": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox-btn/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-checkbox-btn/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-checkbox-btn/value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-checkbox-btn/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox-btn/error": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox-btn/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-checkbox-btn/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-checkbox-btn/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-checkbox-btn/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-checkbox-btn/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-checkbox-btn/multiple": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox-btn/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-checkbox-btn/readonly": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox-btn/inline": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox-btn/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-checkbox-btn/indeterminate": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-checkbox-btn.json))"
  },
  "v-checkbox-btn/indeterminate-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-checkbox-btn.json))"
  },
  "v-checkbox-btn/true-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-checkbox-btn/false-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-checkbox-btn/false-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-checkbox-btn/true-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-chip/filter": {
    "type": "boolean",
    "description": "Displays a selection icon when selected"
  },
  "v-chip/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-chip/value": {
    "type": "any",
    "description": "The value used when a child of a [v-chip-group](/components/chip-groups)"
  },
  "v-chip/size": {
    "type": "string | number",
    "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**."
  },
  "v-chip/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-chip/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-chip/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-chip/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-chip/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-chip/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-chip/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-chip/text": {
    "type": "string",
    "description": "Specify content text for the component."
  },
  "v-chip/closable": {
    "type": "boolean",
    "description": "Adds remove button and then a chip can be closed"
  },
  "v-chip/close-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Change the default icon used for **close** chips"
  },
  "v-chip/close-label": {
    "type": "string",
    "description": "Text used for *aria-label* on the close button in **close** chips. Can also be customized globally in [Internationalization](/customization/internationalization)"
  },
  "v-chip/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-chip/replace": {
    "type": "boolean",
    "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation."
  },
  "v-chip/link": {
    "type": "boolean",
    "description": "Designates that the component is a link. This is automatic when using the href or to prop."
  },
  "v-chip/label": {
    "type": "boolean",
    "description": "Applies a medium size border radius"
  },
  "v-chip/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-chip/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-chip/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content"
  },
  "v-chip/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-chip/active-class": {
    "type": "string",
    "description": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation"
  },
  "v-chip/href": {
    "type": "string",
    "description": "Designates the component as anchor and applies the **href** attribute."
  },
  "v-chip/exact": {
    "type": "boolean",
    "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation."
  },
  "v-chip/to": {
    "type": "unknown",
    "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation."
  },
  "v-chip/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-chip/append-avatar": {
    "type": "string",
    "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot"
  },
  "v-chip/prepend-avatar": {
    "type": "string",
    "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content"
  },
  "v-chip/draggable": {
    "type": "boolean",
    "description": "Makes the chip draggable"
  },
  "v-chip/pill": {
    "type": "boolean",
    "description": "Remove `v-avatar` padding"
  },
  "v-chip/filter-icon": {
    "type": "string",
    "description": "Change the default icon used for **filter** chips"
  },
  "v-chip-group/filter": {
    "type": "boolean",
    "description": "Applies an checkmark icon in front of every chip for using it like a filter"
  },
  "v-chip-group/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-chip-group/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-chip-group/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-chip-group/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-chip-group/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-chip-group/disabled": {
    "type": "boolean",
    "description": "Puts all children components into a disabled state"
  },
  "v-chip-group/multiple": {
    "type": "boolean",
    "description": "Allows one to select mulitple items."
  },
  "v-chip-group/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-chip-group/max": {
    "type": "number",
    "description": "Sets a maximum number of selections that can be made."
  },
  "v-chip-group/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-chip-group/mandatory": {
    "type": "boolean | \"force\"",
    "description": "Forces at least one item to always be selected (if available)."
  },
  "v-chip-group/column": {
    "type": "boolean",
    "description": "Remove horizontal pagination and wrap items as needed"
  },
  "v-code/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-color-picker/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-color-picker/model-value": {
    "type": "string | Record<string, unknown>",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-color-picker/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-color-picker/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-color-picker/width": {
    "type": "string | number",
    "description": "Sets the width of the color picker"
  },
  "v-color-picker/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-color-picker/mode": {
    "type": "string",
    "description": "Sets mode of inputs. Available modes are 'rgba', 'hsla', and 'hexa'. Can be synced with the `.sync` modifier."
  },
  "v-color-picker/canvas-height": {
    "type": "string | number",
    "description": "Height of canvas"
  },
  "v-color-picker/dot-size": {
    "type": "string | number",
    "description": "Changes the size of the selection dot on the canvas"
  },
  "v-color-picker/hide-canvas": {
    "type": "boolean",
    "description": "Hides canvas"
  },
  "v-color-picker/hide-sliders": {
    "type": "boolean",
    "description": "Hides sliders"
  },
  "v-color-picker/hide-inputs": {
    "type": "boolean",
    "description": "Hides inputs"
  },
  "v-color-picker/modes": {
    "type": "string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-color-picker.json))"
  },
  "v-color-picker/show-swatches": {
    "type": "boolean",
    "description": "Displays color swatches"
  },
  "v-color-picker/swatches-max-height": {
    "type": "string | number",
    "description": "Sets the maximum height of the swatches section"
  },
  "v-color-picker/swatches": {
    "type": "string[][]",
    "description": "Sets the available color swatches to select from - This prop only accepts rgba hex strings"
  },
  "v-combobox/type": {
    "type": "string",
    "description": "Sets input type"
  },
  "v-combobox/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-combobox/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-combobox/reverse": {
    "type": "boolean",
    "description": "Reverses the input orientation"
  },
  "v-combobox/id": {
    "type": "string",
    "description": "Sets the DOM id on the component"
  },
  "v-combobox/items": {
    "type": "unknown[]",
    "description": "Can be an array of objects or array of strings. When using objects, will look for a title, value and disabled keys. This can be changed using the **item-title**, **item-value** and **item-disabled** props.  Objects that have a **header** or **divider** property are considered special cases and generate a list header or divider; these items are not selectable."
  },
  "v-combobox/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-combobox/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-combobox/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-combobox/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-combobox/variant": {
    "type": "\"outlined\" | \"plain\" | \"underlined\" | \"filled\" | \"solo\"",
    "description": "Applies a distinct style to the component"
  },
  "v-combobox/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-combobox/filter-mode": {
    "type": "\"every\" | \"some\" | \"union\" | \"intersection\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-combobox/no-filter": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-combobox/custom-filter": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L20-L20\" target=\"_blank\">FilterFunction</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-combobox/custom-key-filter": {
    "type": "{ [string]: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L20-L20\" target=\"_blank\">FilterFunction</a> }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-combobox/filter-keys": {
    "type": "string | string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-combobox/chips": {
    "type": "boolean",
    "description": "Changes display of selections to chips"
  },
  "v-combobox/closable-chips": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-combobox/eager": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-combobox/hide-no-data": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-combobox/hide-selected": {
    "type": "boolean",
    "description": "Do not display in the select menu items that are already selected"
  },
  "v-combobox/menu": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-combobox/menu-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-combobox/menu-props": {
    "type": "unknown",
    "description": "Pass props through to the `v-menu` component. Accepts an object with anything from [/api/v-menu](/api/v-menu/#props), camelCase keys are recommended."
  },
  "v-combobox/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the input"
  },
  "v-combobox/transition": {
    "type": "string | boolean",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-combobox/multiple": {
    "type": "boolean",
    "description": "Changes select to multiple. Accepts array for value"
  },
  "v-combobox/no-data-text": {
    "type": "string",
    "description": "Text shown when no items are provided to the component"
  },
  "v-combobox/open-on-clear": {
    "type": "boolean",
    "description": "When using the **clearable** prop, once cleared, the select menu will either open or stay open, depending on the current state"
  },
  "v-combobox/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-combobox/item-title": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-combobox/item-value": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-combobox/item-children": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-combobox/item-props": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component."
  },
  "v-combobox/return-object": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-combobox/autofocus": {
    "type": "boolean",
    "description": "Enables autofocus"
  },
  "v-combobox/hint": {
    "type": "string",
    "description": "Hint text"
  },
  "v-combobox/persistent-hint": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-combobox/prefix": {
    "type": "string",
    "description": "Displays prefix text"
  },
  "v-combobox/placeholder": {
    "type": "string",
    "description": "Sets the input’s placeholder text"
  },
  "v-combobox/persistent-placeholder": {
    "type": "boolean",
    "description": "Forces placeholder to always be visible"
  },
  "v-combobox/persistent-counter": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-combobox/suffix": {
    "type": "string",
    "description": "Displays suffix text"
  },
  "v-combobox/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-combobox/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`"
  },
  "v-combobox/messages": {
    "type": "string | string[]",
    "description": "Displays a list of messages or message if using a string"
  },
  "v-combobox/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-combobox/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-combobox/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-combobox/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-combobox/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-combobox/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-combobox/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-combobox/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-combobox/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-combobox/clearable": {
    "type": "boolean",
    "description": "Allows for the component to be cleared"
  },
  "v-combobox/clear-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Applied when using **clearable** and the input is dirty"
  },
  "v-combobox/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-combobox/persistent-clear": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-combobox/prepend-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon inside the component's input, uses the same syntax as `v-icon`"
  },
  "v-combobox/single-line": {
    "type": "boolean",
    "description": "Label does not move on focus/dirty"
  },
  "v-combobox/loading": {
    "type": "string | boolean",
    "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-combobox/counter": {
    "type": "string | number | true",
    "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation."
  },
  "v-combobox/counter-value": {
    "type": "(value: any) => number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-combobox/delimiters": {
    "type": "string[]",
    "description": "Accepts an array of strings that will trigger a new tag when typing. Does not replace the normal Tab and Enter keys."
  },
  "v-counter/value": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-counter.json))"
  },
  "v-counter/transition": {
    "type": "string | { component: DefineComponent<{ origin: string; mode: string; group: boolean; hideOnLeave: boolean; leaveAbsolute: boolean; } & {} & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, () => VNode<RendererNode, RendererElement, { [key: string]: any; }>, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, PublicProps, { origin: string; mode: string; group: boolean; hideOnLeave: boolean; leaveAbsolute: boolean; } & {} & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, { origin: string; mode: string; group: boolean; hideOnLeave: boolean; leaveAbsolute: boolean; }> }",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-counter/active": {
    "type": "boolean",
    "description": "Determines whether the counter is visible or not"
  },
  "v-counter/max": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-counter.json))"
  },
  "v-defaults-provider/disabled": {
    "type": "boolean",
    "description": "Turns off all calcuations of new default values for improved performance in situations where defaults propagation isn't necessary"
  },
  "v-defaults-provider/root": {
    "type": "boolean",
    "description": "Force current defaults to match the application root defaults"
  },
  "v-defaults-provider/scoped": {
    "type": "boolean",
    "description": "Prevents the ability for default values to be inherited from parent components"
  },
  "v-defaults-provider/reset": {
    "type": "string | number",
    "description": "Reset the default values up the nested chain by {n} amount"
  },
  "v-defaults-provider/defaults": {
    "type": "{ global: Record<string, unknown>; [string]: Record<string, unknown> }",
    "description": "Specify new default prop values for components. Keep in mind that this will be merged with previously defined values"
  },
  "v-dialog/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-dialog/z-index": {
    "type": "string | number",
    "description": "The z-index used for the component"
  },
  "v-dialog/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-dialog/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "Aligns the component towards the `top`, `bottom`, `right`, `left`, can be combined like for example `top right`"
  },
  "v-dialog/absolute": {
    "type": "boolean",
    "description": "Applies **position: absolute** to the content element."
  },
  "v-dialog/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-dialog/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-dialog/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-dialog/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-dialog/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-dialog/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-dialog/eager": {
    "type": "boolean",
    "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO."
  },
  "v-dialog/activator": {
    "type": "string | ComponentPublicInstance | Element",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-dialog/close-on-back": {
    "type": "boolean",
    "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing."
  },
  "v-dialog/contained": {
    "type": "boolean",
    "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`."
  },
  "v-dialog/content-class": {
    "type": "any",
    "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component"
  },
  "v-dialog/content-props": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-dialog/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-dialog/no-click-animation": {
    "type": "boolean",
    "description": "Disables the bounce effect when clicking outside of a `v-dialog`'s content when using the **persistent** prop."
  },
  "v-dialog/persistent": {
    "type": "boolean",
    "description": "Clicking outside of the element or pressing **esc** key will not deactivate it."
  },
  "v-dialog/scrim": {
    "type": "string | boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-dialog/activator-props": {
    "type": "{  }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-dialog/open-on-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-dialog/open-on-hover": {
    "type": "boolean",
    "description": "Designates whether component should activate when its activator is hovered."
  },
  "v-dialog/open-on-focus": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-dialog/close-on-content-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-dialog/close-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before closing component. Only applies to hover and focus events."
  },
  "v-dialog/open-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before opening component. Only applies to hover and focus events."
  },
  "v-dialog/location-strategy": {
    "type": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-dialog/origin": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-dialog/offset": {
    "type": "string | number | number[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-dialog/scroll-strategy": {
    "type": "\"close\" | \"none\" | \"block\" | \"reposition\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-scroll-strategies.json))"
  },
  "v-dialog/transition": {
    "type": "string | { component: DefineComponent<{} & { target?: HTMLElement; } & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, () => JSX.Element, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, PublicProps, {} & { target?: HTMLElement; } & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, {}> }",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-dialog/attach": {
    "type": "string | boolean | Element",
    "description": "Specifies which DOM element that this component should detach to. String can be any valid querySelector and Object can be any valid Node. This attaches to the root `v-app` component by default"
  },
  "v-dialog/fullscreen": {
    "type": "boolean",
    "description": "Changes layout for fullscreen display."
  },
  "v-dialog/scrollable": {
    "type": "boolean",
    "description": "When set to true, expects a `v-card` and a `v-card-text` component with a designated height. For more information, check out the [scrollable example](/components/dialogs#scrollable)."
  },
  "v-dialog/retain-focus": {
    "type": "boolean",
    "description": "Tab focus will return to the first child of the dialog by default. Disable this when using external tools that require focus such as TinyMCE or vue-clipboard."
  },
  "v-divider/length": {
    "type": "string | number",
    "description": "Sets the dividers length. Default unit is px."
  },
  "v-divider/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-divider/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-divider/vertical": {
    "type": "boolean",
    "description": "Displays dividers vertically."
  },
  "v-divider/inset": {
    "type": "boolean",
    "description": "Adds indentation (72px) for **normal** dividers, reduces max height for **vertical**."
  },
  "v-divider/thickness": {
    "type": "string | number",
    "description": "Sets the dividers thickness. Default unit is px."
  },
  "v-expansion-panels/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-expansion-panels/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-expansion-panels/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-expansion-panels/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-expansion-panels/variant": {
    "type": "\"default\" | \"inset\" | \"accordion\" | \"popout\"",
    "description": "Applies a distinct style to the component"
  },
  "v-expansion-panels/disabled": {
    "type": "boolean",
    "description": "Puts all children components into a disabled state"
  },
  "v-expansion-panels/multiple": {
    "type": "boolean",
    "description": "Allows one to select mulitple items."
  },
  "v-expansion-panels/readonly": {
    "type": "boolean",
    "description": "Makes the entire expansion-panel read only."
  },
  "v-expansion-panels/max": {
    "type": "number",
    "description": "Sets a maximum number of selections that can be made."
  },
  "v-expansion-panels/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-expansion-panels/mandatory": {
    "type": "boolean | \"force\"",
    "description": "Forces at least one item to always be selected (if available)."
  },
  "v-expansion-panel/value": {
    "type": "any",
    "description": "Controls the opened/closed state of content"
  },
  "v-expansion-panel/title": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel.json))"
  },
  "v-expansion-panel/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-expansion-panel/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-expansion-panel/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-expansion-panel/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-expansion-panel/text": {
    "type": "string",
    "description": "Specify content text for the component."
  },
  "v-expansion-panel/eager": {
    "type": "boolean",
    "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO."
  },
  "v-expansion-panel/disabled": {
    "type": "boolean",
    "description": "Disables the expansion-panel content"
  },
  "v-expansion-panel/readonly": {
    "type": "boolean",
    "description": "Makes the expansion-panel content read only."
  },
  "v-expansion-panel/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-expansion-panel/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-expansion-panel/ripple": {
    "type": "boolean | Record<string, any>",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-expansion-panel/expand-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))"
  },
  "v-expansion-panel/collapse-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))"
  },
  "v-expansion-panel/hide-actions": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))"
  },
  "v-expansion-panel-text/eager": {
    "type": "boolean",
    "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO."
  },
  "v-expansion-panel-title/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-expansion-panel-title/readonly": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))"
  },
  "v-expansion-panel-title/ripple": {
    "type": "boolean | Record<string, any>",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-expansion-panel-title/expand-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))"
  },
  "v-expansion-panel-title/collapse-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))"
  },
  "v-expansion-panel-title/hide-actions": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-expansion-panel-title.json))"
  },
  "v-field/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-field/reverse": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-field/id": {
    "type": "string",
    "description": "Sets the DOM id on the component"
  },
  "v-field/error": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-field/model-value": {
    "type": "unknown",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-field/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-field/variant": {
    "type": "\"outlined\" | \"plain\" | \"underlined\" | \"filled\" | \"solo\"",
    "description": "Applies a distinct style to the component"
  },
  "v-field/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-field/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the input"
  },
  "v-field/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-field/append-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot"
  },
  "v-field/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-field/clearable": {
    "type": "boolean",
    "description": "Allows for the component to be cleared"
  },
  "v-field/clear-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-field/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-field/dirty": {
    "type": "boolean",
    "description": "Manually apply the dirty state styling"
  },
  "v-field/persistent-clear": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-field/prepend-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot"
  },
  "v-field/single-line": {
    "type": "boolean",
    "description": "Label does not move on focus/dirty"
  },
  "v-field/loading": {
    "type": "string | boolean",
    "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-field-label/floating": {
    "type": "boolean",
    "description": "Elevates the label above the slotted content."
  },
  "v-file-input/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-file-input/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-file-input/reverse": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-file-input/id": {
    "type": "string",
    "description": "Sets the DOM id on the component"
  },
  "v-file-input/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-file-input/model-value": {
    "type": "File[]",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-file-input/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-file-input/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-file-input/variant": {
    "type": "\"outlined\" | \"plain\" | \"underlined\" | \"filled\" | \"solo\"",
    "description": "Applies a distinct style to the component"
  },
  "v-file-input/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-file-input/chips": {
    "type": "boolean",
    "description": "Changes display of selections to chips"
  },
  "v-file-input/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the input"
  },
  "v-file-input/multiple": {
    "type": "boolean",
    "description": "Adds the **multiple** attribute to the input, allowing multiple file selections."
  },
  "v-file-input/hint": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))"
  },
  "v-file-input/persistent-hint": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))"
  },
  "v-file-input/placeholder": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))"
  },
  "v-file-input/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-file-input/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the component, uses the same syntax as `v-icon`"
  },
  "v-file-input/messages": {
    "type": "string | string[]",
    "description": "Displays a list of messages or message if using a string"
  },
  "v-file-input/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-file-input/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-file-input/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-file-input/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-file-input/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-file-input/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-file-input/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-file-input/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-file-input/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-file-input/append-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot"
  },
  "v-file-input/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-file-input/clearable": {
    "type": "boolean",
    "description": "Allows for the component to be cleared"
  },
  "v-file-input/clear-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-file-input/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-file-input/dirty": {
    "type": "boolean",
    "description": "Manually apply the dirty state styling"
  },
  "v-file-input/persistent-clear": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-file-input/prepend-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot"
  },
  "v-file-input/single-line": {
    "type": "boolean",
    "description": "Label does not move on focus/dirty"
  },
  "v-file-input/loading": {
    "type": "string | boolean",
    "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-file-input/counter": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-file-input.json))"
  },
  "v-file-input/counter-size-string": {
    "type": "string",
    "description": "The text displayed when using the **counter** and **show-size** props. Can also be customized globally on the [internationalization page](/customization/internationalization)."
  },
  "v-file-input/counter-string": {
    "type": "string",
    "description": "The text displayed when using the **counter** prop. Can also be customized globally on the [internationalization page](/customization/internationalization)."
  },
  "v-file-input/show-size": {
    "type": "boolean | 1000 | 1024",
    "description": "Sets the displayed size of selected file(s). When using **true** will default to _1000_ displaying (**kB, MB, GB**) while _1024_ will display (**KiB, MiB, GiB**)."
  },
  "v-footer/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-footer/name": {
    "type": "string",
    "description": "Assign a specific name for layout registration."
  },
  "v-footer/absolute": {
    "type": "boolean",
    "description": "Applies **position: absolute** to the component."
  },
  "v-footer/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-footer/height": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-footer.json))"
  },
  "v-footer/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-footer/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-footer/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-footer/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-footer/order": {
    "type": "string | number",
    "description": "Adjust the order of the component in relation to its registration order."
  },
  "v-footer/app": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-footer.json))"
  },
  "v-form/model-value": {
    "type": "boolean",
    "description": "The value representing the validity of the form. If the value is `null` then no validation has taken place yet, or the form has been reset. Otherwise the value will be a `boolean` that indicates if validation has passed or not."
  },
  "v-form/disabled": {
    "type": "boolean",
    "description": "Puts all children inputs into a disabled state"
  },
  "v-form/readonly": {
    "type": "boolean",
    "description": "Puts all children inputs into a readonly state."
  },
  "v-form/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Changes the events in which validation occurs."
  },
  "v-form/fast-fail": {
    "type": "boolean",
    "description": "Stop validation as soon as any rules fail."
  },
  "v-container/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-container/fluid": {
    "type": "boolean",
    "description": "Removes viewport maximum-width size breakpoints."
  },
  "v-col/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-col/order": {
    "type": "string | number",
    "description": "Sets the default [order](https://developer.mozilla.org/en-US/docs/Web/CSS/order) for the column."
  },
  "v-col/offset": {
    "type": "string | number",
    "description": "Sets the default offset for the column."
  },
  "v-col/cols": {
    "type": "string | number | boolean",
    "description": "Sets the default number of columns the component extends. Available options are: **1 -> 12** and **auto**."
  },
  "v-col/align-self": {
    "type": "\"end\" | \"start\" | \"center\" | \"auto\" | \"baseline\" | \"stretch\"",
    "description": "Applies the [align-items](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items) css property. Available options are: **start**, **center**, **end**, **auto**, **baseline** and **stretch**."
  },
  "v-row/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-row/dense": {
    "type": "boolean",
    "description": "Reduces the gutter between `v-col`s."
  },
  "v-row/no-gutters": {
    "type": "boolean",
    "description": "Removes the gutter between `v-col`s."
  },
  "v-row/align": {
    "type": "\"end\" | \"start\" | \"center\" | \"baseline\" | \"stretch\"",
    "description": "Applies the [align-items](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items) css property. Available options are: **start**, **center**, **end**, **baseline** and **stretch**."
  },
  "v-row/justify": {
    "type": "\"end\" | \"start\" | \"center\" | \"stretch\" | \"space-between\" | \"space-around\" | \"space-evenly\"",
    "description": "Applies the [justify-content](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content) css property. Available options are: **start**, **center**, **end**, **space-between** and **space-around**."
  },
  "v-row/align-content": {
    "type": "\"end\" | \"start\" | \"center\" | \"stretch\" | \"space-between\" | \"space-around\" | \"space-evenly\"",
    "description": "Applies the [align-content](https://developer.mozilla.org/en-US/docs/Web/CSS/align-content) css property. Available options are: **start**, **center**, **end**, **space-between**, **space-around** and **stretch**."
  },
  "v-spacer/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-hover/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-hover/disabled": {
    "type": "boolean",
    "description": "Removes hover functionality"
  },
  "v-hover/close-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before closing component. Only applies to hover and focus events."
  },
  "v-hover/open-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before opening component. Only applies to hover and focus events."
  },
  "v-icon/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-icon/size": {
    "type": "string | number",
    "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**."
  },
  "v-icon/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-icon/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-icon/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-icon/end": {
    "type": "boolean",
    "description": "Applies margin at the start of the component."
  },
  "v-icon/start": {
    "type": "boolean",
    "description": "Applies margin at the end of the component."
  },
  "v-component-icon/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-component-icon/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-svg-icon/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-svg-icon/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-ligature-icon/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-ligature-icon/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-class-icon/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-class-icon/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-img/width": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-img.json))"
  },
  "v-img/eager": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-img/transition": {
    "type": "string",
    "description": "The transition to use when switching from `lazy-src` to `src`. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-img/options": {
    "type": "{ root: any; rootMargin: any; threshold: any }",
    "description": "Options that are passed to the [Intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) constructor."
  },
  "v-img/alt": {
    "type": "string",
    "description": "Alternate text for screen readers. Leave empty for decorative images."
  },
  "v-img/cover": {
    "type": "boolean",
    "description": "Resizes the background image to cover the entire container."
  },
  "v-img/gradient": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-img.json))"
  },
  "v-img/lazy-src": {
    "type": "string",
    "description": "Something to show while waiting for the main image to load, typically a small base64-encoded thumbnail. Has a slight blur filter applied.\n\nUse [vuetify-loader](https://github.com/vuetifyjs/vuetify-loader) to generate automatically."
  },
  "v-img/sizes": {
    "type": "string",
    "description": "For use with `srcset`, see [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-sizes)."
  },
  "v-img/srcset": {
    "type": "string",
    "description": "A set of alternate images to use based on device size. [Read more...](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset)."
  },
  "v-img/aspect-ratio": {
    "type": "string | number",
    "description": "Calculated as `width/height`, so for a 1920x1080px image this will be `1.7778`. Will be calculated automatically if omitted."
  },
  "v-img/src": {
    "type": "string | { src: string; srcset: string; lazySrc: string; aspect: number }",
    "description": "The image URL. This prop is mandatory."
  },
  "v-input/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-input/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-input/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-input/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-input/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-input/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-input/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-input/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-input/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the component, uses the same syntax as `v-icon`"
  },
  "v-input/messages": {
    "type": "string | string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-input/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-input/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-input/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-input/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-input/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-input/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-input/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-input/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-input/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-item-group/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-item-group/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-item-group/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-item-group/disabled": {
    "type": "boolean",
    "description": "Puts all children components into a disabled state"
  },
  "v-item-group/multiple": {
    "type": "boolean",
    "description": "Allows one to select mulitple items."
  },
  "v-item-group/max": {
    "type": "number",
    "description": "Sets a maximum number of selections that can be made."
  },
  "v-item-group/selected-class": {
    "type": "string",
    "description": "Configure the selected CSS class. This class will be available in `v-item` default scoped slot."
  },
  "v-item-group/mandatory": {
    "type": "boolean | \"force\"",
    "description": "Forces at least one item to always be selected (if available)."
  },
  "v-item/value": {
    "type": "any",
    "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used."
  },
  "v-item/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-item/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-kbd/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-label/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-label/text": {
    "type": "string",
    "description": "Specify content text for the component."
  },
  "v-label/clickable": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-label.json))"
  },
  "v-layout/full-height": {
    "type": "boolean",
    "description": "Sets the component height to 100%"
  },
  "v-layout/overlaps": {
    "type": "string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/layout.json))"
  },
  "v-layout-item/name": {
    "type": "string",
    "description": "Assign a specific name for layout registration."
  },
  "v-layout-item/position": {
    "type": "\"top\" | \"left\" | \"right\" | \"bottom\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-layout-item.json))"
  },
  "v-layout-item/size": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-layout-item.json))"
  },
  "v-layout-item/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-layout-item/absolute": {
    "type": "boolean",
    "description": "Applies **position: absolute** to the component."
  },
  "v-layout-item/order": {
    "type": "string | number",
    "description": "Adjust the order of the component in relation to its registration order."
  },
  "v-lazy/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-lazy/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-lazy/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-lazy/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-lazy/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-lazy/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-lazy/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-lazy/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-lazy/transition": {
    "type": "string",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-lazy/options": {
    "type": "{ root: any; rootMargin: any; threshold: any }",
    "description": "Options that are passed to the [Intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) constructor."
  },
  "v-list/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-list/items": {
    "type": "unknown[]",
    "description": "An array of strings or objects used for automatically generating children components"
  },
  "v-list/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-list/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-list/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-list/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-list/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-list/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-list/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-list/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-list/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-list/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-list/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-list/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-list/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-list/disabled": {
    "type": "boolean",
    "description": "Puts all children inputs into a disabled state"
  },
  "v-list/item-title": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-list/item-value": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-list/item-children": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-list/item-props": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component."
  },
  "v-list/return-object": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-list/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-list/lines": {
    "type": "false | \"one\" | \"two\" | \"three\"",
    "description": "Designates a **minimum-height** for all children `v-list-item` components. This prop uses [line-clamp](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp) and is not supported in all browsers."
  },
  "v-list/mandatory": {
    "type": "boolean",
    "description": "Forces at least one item to always be selected (if available)."
  },
  "v-list/active-class": {
    "type": "string",
    "description": "The class applied to the component when it is in an active state"
  },
  "v-list/active-color": {
    "type": "string",
    "description": "The applied color when the component is in an active state"
  },
  "v-list/selected": {
    "type": "unknown[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/nested.json))"
  },
  "v-list/nav": {
    "type": "boolean",
    "description": "An alternative styling that reduces `v-list-item` width and rounds the corners. Typically used with **[v-navigation-drawer](/components/navigation-drawers)**"
  },
  "v-list/select-strategy": {
    "type": "\"single-leaf\" | \"leaf\" | \"independent\" | \"single-independent\" | \"classic\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/nested/selectStrategies.ts#L4-L11\" target=\"_blank\">SelectStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/nested.json))"
  },
  "v-list/open-strategy": {
    "type": "\"multiple\" | \"single\" | \"list\" | { open: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/nested/openStrategies.ts#L1-L8\" target=\"_blank\">OpenStrategyFn</a>; select: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/nested/openStrategies.ts#L10-L18\" target=\"_blank\">OpenSelectStrategyFn</a> }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/nested.json))"
  },
  "v-list/opened": {
    "type": "unknown[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/nested.json))"
  },
  "v-list/item-type": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list.json))"
  },
  "v-list-group/value": {
    "type": "any",
    "description": "Expands / Collapse the list-group"
  },
  "v-list-group/title": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))"
  },
  "v-list-group/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-list-group/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-list-group/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-list-group/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the component, uses the same syntax as `v-icon`"
  },
  "v-list-group/active-color": {
    "type": "string",
    "description": "The applied color when the component is in an active state"
  },
  "v-list-group/expand-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))"
  },
  "v-list-group/collapse-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))"
  },
  "v-list-group/fluid": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))"
  },
  "v-list-group/subgroup": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-group.json))"
  },
  "v-list-img/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-list-item/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-list-item/value": {
    "type": "any",
    "description": "The value used for selection."
  },
  "v-list-item/title": {
    "type": "string | number | boolean",
    "description": "Generates a `v-list-item-title` component with the supplied value"
  },
  "v-list-item/color": {
    "type": "string",
    "description": "Applies specified color to the control when in an **active** state or **input-value** is **true** - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-list-item/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-list-item/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-list-item/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-list-item/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-list-item/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-list-item/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-list-item/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-list-item/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-list-item/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-list-item/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-list-item/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-list-item/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-list-item/replace": {
    "type": "boolean",
    "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation."
  },
  "v-list-item/link": {
    "type": "boolean",
    "description": "Designates that the component is a link. This is automatic when using the href or to prop."
  },
  "v-list-item/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-list-item/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-list-item/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content"
  },
  "v-list-item/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-list-item/lines": {
    "type": "\"one\" | \"two\" | \"three\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-item.json))"
  },
  "v-list-item/active-class": {
    "type": "string",
    "description": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation"
  },
  "v-list-item/active-color": {
    "type": "string",
    "description": "The applied color when the component is in an active state"
  },
  "v-list-item/href": {
    "type": "string",
    "description": "Designates the component as anchor and applies the **href** attribute."
  },
  "v-list-item/exact": {
    "type": "boolean",
    "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation."
  },
  "v-list-item/to": {
    "type": "unknown",
    "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation."
  },
  "v-list-item/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-list-item/subtitle": {
    "type": "string | number | boolean",
    "description": "Specify a subtitle text for the component."
  },
  "v-list-item/append-avatar": {
    "type": "string",
    "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot"
  },
  "v-list-item/prepend-avatar": {
    "type": "string",
    "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content"
  },
  "v-list-item/nav": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-item.json))"
  },
  "v-list-item-action/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-list-item-action/end": {
    "type": "boolean",
    "description": "Applies margin at the start of the component."
  },
  "v-list-item-action/start": {
    "type": "boolean",
    "description": "Applies margin at the end of the component."
  },
  "v-list-item-media/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-list-item-media/end": {
    "type": "boolean",
    "description": "Applies margin at the start of the component."
  },
  "v-list-item-media/start": {
    "type": "boolean",
    "description": "Applies margin at the end of the component."
  },
  "v-list-item-subtitle/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-list-item-title/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element"
  },
  "v-list-subheader/title": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-subheader.json))"
  },
  "v-list-subheader/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-list-subheader/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-list-subheader/sticky": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-subheader.json))"
  },
  "v-list-subheader/inset": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-list-subheader.json))"
  },
  "v-locale-provider/messages": {
    "type": "Record<string, any>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-locale-provider.json))"
  },
  "v-locale-provider/locale": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-locale-provider.json))"
  },
  "v-locale-provider/fallback-locale": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-locale-provider.json))"
  },
  "v-locale-provider/rtl": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-locale-provider.json))"
  },
  "v-main/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-main/scrollable": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-main.json))"
  },
  "v-menu/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-menu/z-index": {
    "type": "string | number",
    "description": "The z-index used for the component"
  },
  "v-menu/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-menu.json))"
  },
  "v-menu/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-menu/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "Aligns the component towards the `top`, `bottom`, `right`, `left`, can be combined like for example `top right`"
  },
  "v-menu/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-menu/max-height": {
    "type": "string | number",
    "description": "Sets the max height of the menu content"
  },
  "v-menu/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-menu/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-menu/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-menu/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-menu/eager": {
    "type": "boolean",
    "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO."
  },
  "v-menu/activator": {
    "type": "string | ComponentPublicInstance | Element",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-menu/close-on-back": {
    "type": "boolean",
    "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing."
  },
  "v-menu/contained": {
    "type": "boolean",
    "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`."
  },
  "v-menu/content-class": {
    "type": "any",
    "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component"
  },
  "v-menu/content-props": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-menu/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-menu/no-click-animation": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-menu/persistent": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-menu/scrim": {
    "type": "string | boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-menu/activator-props": {
    "type": "{  }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-menu/open-on-click": {
    "type": "boolean",
    "description": "Designates whether menu should open on activator click"
  },
  "v-menu/open-on-hover": {
    "type": "boolean",
    "description": "Designates whether menu should open on activator hover"
  },
  "v-menu/open-on-focus": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-menu/close-on-content-click": {
    "type": "boolean",
    "description": "Designates if menu should close when its content is clicked"
  },
  "v-menu/close-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before closing component. Only works with the **open-on-hover** prop"
  },
  "v-menu/open-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before opening component. Only works with the **open-on-hover** prop"
  },
  "v-menu/location-strategy": {
    "type": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-menu/origin": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-menu/offset": {
    "type": "string | number | number[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-menu/scroll-strategy": {
    "type": "\"close\" | \"none\" | \"block\" | \"reposition\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-scroll-strategies.json))"
  },
  "v-menu/transition": {
    "type": "string | { component: DefineComponent<{} & { target?: HTMLElement; } & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, () => JSX.Element, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, PublicProps, {} & { target?: HTMLElement; } & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, {}> }",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-menu/attach": {
    "type": "string | boolean | Element",
    "description": "Specifies which DOM element that this component should detach to. String can be any valid querySelector and Object can be any valid Node. This attaches to the root `v-app` component by default"
  },
  "v-messages/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-messages/transition": {
    "type": "string | { component: DefineComponent<{ origin: string; mode: string; group: boolean; hideOnLeave: boolean; leaveAbsolute: boolean; } & {} & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, () => VNode<RendererNode, RendererElement, { [key: string]: any; }>, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, PublicProps, { origin: string; mode: string; group: boolean; hideOnLeave: boolean; leaveAbsolute: boolean; } & {} & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, { origin: string; mode: string; group: boolean; hideOnLeave: boolean; leaveAbsolute: boolean; }>; leaveAbsolute: boolean; group: boolean }",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-messages/messages": {
    "type": "string | string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-messages.json))"
  },
  "v-messages/active": {
    "type": "boolean",
    "description": "Determines whether the messages are visible or not"
  },
  "v-navigation-drawer/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-navigation-drawer/name": {
    "type": "string",
    "description": "Assign a specific name for layout registration."
  },
  "v-navigation-drawer/image": {
    "type": "string",
    "description": "Apply a specific background image to the component."
  },
  "v-navigation-drawer/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-navigation-drawer/location": {
    "type": "\"top\" | \"left\" | \"right\" | \"bottom\" | \"end\" | \"start\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-navigation-drawer.json))"
  },
  "v-navigation-drawer/absolute": {
    "type": "boolean",
    "description": "Applies **position: absolute** to the component."
  },
  "v-navigation-drawer/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-navigation-drawer/floating": {
    "type": "boolean",
    "description": "A floating drawer has no visible container (no border-right)"
  },
  "v-navigation-drawer/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-navigation-drawer/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-navigation-drawer/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-navigation-drawer/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-navigation-drawer/order": {
    "type": "string | number",
    "description": "Adjust the order of the component in relation to its registration order."
  },
  "v-navigation-drawer/width": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-navigation-drawer.json))"
  },
  "v-navigation-drawer/sticky": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-navigation-drawer.json))"
  },
  "v-navigation-drawer/scrim": {
    "type": "string | boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-navigation-drawer.json))"
  },
  "v-navigation-drawer/disable-resize-watcher": {
    "type": "boolean",
    "description": "Will automatically open/close drawer when resized depending if mobile or desktop."
  },
  "v-navigation-drawer/disable-route-watcher": {
    "type": "boolean",
    "description": "Disables opening of navigation drawer when route changes"
  },
  "v-navigation-drawer/expand-on-hover": {
    "type": "boolean",
    "description": "Collapses the drawer to a **mini-variant** until hovering with the mouse"
  },
  "v-navigation-drawer/permanent": {
    "type": "boolean",
    "description": "The drawer remains visible regardless of screen size"
  },
  "v-navigation-drawer/temporary": {
    "type": "boolean",
    "description": "A temporary drawer sits above its application and uses a scrim (overlay) to darken the background"
  },
  "v-navigation-drawer/touchless": {
    "type": "boolean",
    "description": "Disable mobile touch functionality"
  },
  "v-navigation-drawer/rail": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-navigation-drawer.json))"
  },
  "v-navigation-drawer/rail-width": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-navigation-drawer.json))"
  },
  "v-overlay/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-overlay/z-index": {
    "type": "string | number",
    "description": "The z-index used for the component"
  },
  "v-overlay/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-overlay/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "Aligns the component towards the `top`, `bottom`, `right`, `left`, can be combined like for example `top right`"
  },
  "v-overlay/absolute": {
    "type": "boolean",
    "description": "Applies **position: absolute** to the content element."
  },
  "v-overlay/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-overlay/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-overlay/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-overlay/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-overlay/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-overlay/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-overlay/eager": {
    "type": "boolean",
    "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO."
  },
  "v-overlay/activator": {
    "type": "string | ComponentPublicInstance | Element",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-overlay/close-on-back": {
    "type": "boolean",
    "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing."
  },
  "v-overlay/contained": {
    "type": "boolean",
    "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`."
  },
  "v-overlay/content-class": {
    "type": "any",
    "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component"
  },
  "v-overlay/content-props": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-overlay/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-overlay/no-click-animation": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-overlay/persistent": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-overlay/scrim": {
    "type": "string | boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-overlay/activator-props": {
    "type": "{  }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-overlay/open-on-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-overlay/open-on-hover": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-overlay/open-on-focus": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-overlay/close-on-content-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-overlay/close-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before closing component. Only applies to hover and focus events."
  },
  "v-overlay/open-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before opening component. Only applies to hover and focus events."
  },
  "v-overlay/location-strategy": {
    "type": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-overlay/origin": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-overlay/offset": {
    "type": "string | number | number[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-overlay/scroll-strategy": {
    "type": "\"close\" | \"none\" | \"block\" | \"reposition\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-scroll-strategies.json))"
  },
  "v-overlay/transition": {
    "type": "string",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-overlay/attach": {
    "type": "string | boolean | Element",
    "description": "Specifies which DOM element that this component should detach to. String can be any valid querySelector and Object can be any valid Node. This attaches to the root `v-app` component by default"
  },
  "v-pagination/length": {
    "type": "string | number",
    "description": "The number of pages"
  },
  "v-pagination/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-pagination/size": {
    "type": "string | number",
    "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**."
  },
  "v-pagination/model-value": {
    "type": "number",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-pagination/color": {
    "type": "string",
    "description": "Applies specified color to the selected page button - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-pagination/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-pagination/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-pagination/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-pagination/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-pagination/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-pagination/start": {
    "type": "string | number",
    "description": "Specify the starting page"
  },
  "v-pagination/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-pagination/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-pagination/active-color": {
    "type": "string",
    "description": "The applied color when the component is in an active state"
  },
  "v-pagination/show-first-last-page": {
    "type": "boolean",
    "description": "Show buttons for going to first and last page"
  },
  "v-pagination/total-visible": {
    "type": "string | number",
    "description": "Specify the total visible pagination numbers"
  },
  "v-pagination/first-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon to use for the first button"
  },
  "v-pagination/prev-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon to use for the prev button"
  },
  "v-pagination/next-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon to use for the next button"
  },
  "v-pagination/last-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon to use for the last button"
  },
  "v-pagination/aria-label": {
    "type": "string",
    "description": "Label for the root element"
  },
  "v-pagination/page-aria-label": {
    "type": "string",
    "description": "Label for each page button"
  },
  "v-pagination/current-page-aria-label": {
    "type": "string",
    "description": "Label for the currently selected page"
  },
  "v-pagination/first-aria-label": {
    "type": "string",
    "description": "Label for the go to first button"
  },
  "v-pagination/previous-aria-label": {
    "type": "string",
    "description": "Label for the previous button"
  },
  "v-pagination/next-aria-label": {
    "type": "string",
    "description": "Label for the next button"
  },
  "v-pagination/last-aria-label": {
    "type": "string",
    "description": "Label for the go to last button"
  },
  "v-pagination/ellipsis": {
    "type": "string",
    "description": "Text to show between page buttons when truncating the list"
  },
  "v-parallax/scale": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-parallax.json))"
  },
  "v-progress-circular/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-progress-circular/size": {
    "type": "string | number",
    "description": "Sets the diameter of the circle in pixels"
  },
  "v-progress-circular/model-value": {
    "type": "string | number",
    "description": "The percentage value for current progress"
  },
  "v-progress-circular/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-progress-circular/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-progress-circular/width": {
    "type": "string | number",
    "description": "Sets the stroke of the circle in pixels"
  },
  "v-progress-circular/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-progress-circular/indeterminate": {
    "type": "boolean | \"disable-shrink\"",
    "description": "Constantly animates, use when loading progress is unknown. If set to the string `'disable-shrink'` it will use a simpler animation that does not run on the main thread."
  },
  "v-progress-circular/rotate": {
    "type": "string | number",
    "description": "Rotates the circle start point in degrees"
  },
  "v-progress-linear/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-progress-linear/reverse": {
    "type": "boolean",
    "description": "Displays reversed progress (right to left in LTR mode and left to right in RTL)"
  },
  "v-progress-linear/model-value": {
    "type": "string | number",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-progress-linear/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/location.json))"
  },
  "v-progress-linear/absolute": {
    "type": "boolean",
    "description": "Applies position: absolute to the component"
  },
  "v-progress-linear/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-progress-linear/height": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-progress-linear.json))"
  },
  "v-progress-linear/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-progress-linear/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-progress-linear/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-progress-linear/active": {
    "type": "boolean",
    "description": "Reduce the height to 0, hiding component"
  },
  "v-progress-linear/max": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-progress-linear.json))"
  },
  "v-progress-linear/indeterminate": {
    "type": "boolean",
    "description": "Constantly animates, use when loading progress is unknown."
  },
  "v-progress-linear/clickable": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-progress-linear.json))"
  },
  "v-progress-linear/stream": {
    "type": "boolean",
    "description": "An alternative style for portraying loading that works in tandem with **buffer-value**"
  },
  "v-progress-linear/striped": {
    "type": "boolean",
    "description": "Adds a stripe background to the filled portion of the progress component"
  },
  "v-progress-linear/rounded-bar": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-progress-linear.json))"
  },
  "v-progress-linear/bg-opacity": {
    "type": "string | number",
    "description": "Background opacity, if null it defaults to 0.3 if background color is not specified or 1 otherwise"
  },
  "v-progress-linear/buffer-value": {
    "type": "string | number",
    "description": "The percentage value for the buffer"
  },
  "v-radio/type": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-radio/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-radio/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-radio/value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-radio/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-radio/error": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-radio/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-radio/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-radio/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-radio/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-radio/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-radio/multiple": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-radio/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-radio/readonly": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-radio/inline": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-radio/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-radio/true-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-radio/false-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-radio/false-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon used when inactive"
  },
  "v-radio/true-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon used when active"
  },
  "v-radio-group/type": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))"
  },
  "v-radio-group/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-radio-group/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-radio-group/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-radio-group/error": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-radio-group/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-radio-group/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-radio-group/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-radio-group/height": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))"
  },
  "v-radio-group/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-radio-group/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-radio-group/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-radio-group/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-radio-group/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the component, uses the same syntax as `v-icon`"
  },
  "v-radio-group/messages": {
    "type": "string | string[]",
    "description": "Displays a list of messages or message if using a string"
  },
  "v-radio-group/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-radio-group/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-radio-group/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-radio-group/readonly": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-radio-group/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-radio-group/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-radio-group/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-radio-group/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-radio-group/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-radio-group/inline": {
    "type": "boolean",
    "description": "Displays radio buttons in row"
  },
  "v-radio-group/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-radio-group/false-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))"
  },
  "v-radio-group/true-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-radio-group.json))"
  },
  "v-range-slider/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-range-slider/reverse": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-range-slider/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-range-slider/model-value": {
    "type": "number[]",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-range-slider/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-range-slider/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-range-slider/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-range-slider/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-range-slider/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-range-slider/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-range-slider/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-range-slider/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the component, uses the same syntax as `v-icon`"
  },
  "v-range-slider/messages": {
    "type": "string | string[]",
    "description": "Displays a list of messages or message if using a string"
  },
  "v-range-slider/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-range-slider/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-range-slider/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-range-slider/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-range-slider/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-range-slider/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-range-slider/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-range-slider/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-range-slider/max": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/strict": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-range-slider.json))"
  },
  "v-range-slider/min": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/step": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/thumb-color": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/thumb-label": {
    "type": "boolean | \"always\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/thumb-size": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/show-ticks": {
    "type": "boolean | \"always\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/ticks": {
    "type": "number[] | Record<number, string>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/tick-size": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/track-color": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/track-fill-color": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-range-slider/track-size": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-rating/length": {
    "type": "string | number",
    "description": "The amount of items to show"
  },
  "v-rating/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-rating/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-rating/size": {
    "type": "string | number",
    "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**."
  },
  "v-rating/model-value": {
    "type": "string | number",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-rating/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-rating/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-rating/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-rating/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-rating/readonly": {
    "type": "boolean",
    "description": "Removes all hover effects and pointer events"
  },
  "v-rating/clearable": {
    "type": "boolean",
    "description": "Allows for the component to be cleared by clicking on the current value"
  },
  "v-rating/active-color": {
    "type": "string",
    "description": "The applied color when the component is in an active state"
  },
  "v-rating/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-rating/hover": {
    "type": "boolean",
    "description": "Provides visual feedback when hovering over icons"
  },
  "v-rating/half-increments": {
    "type": "boolean",
    "description": "Allows the selection of half increments"
  },
  "v-rating/item-aria-label": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-rating.json))"
  },
  "v-rating/empty-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon displayed when empty"
  },
  "v-rating/full-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The icon displayed when full"
  },
  "v-rating/item-label-position": {
    "type": "string",
    "description": "Position of item labels. Accepts 'top' and 'bottom'."
  },
  "v-rating/item-labels": {
    "type": "string[]",
    "description": "Array of labels to display next to each item."
  },
  "v-responsive/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-responsive/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-responsive/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-responsive/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-responsive/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-responsive/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-responsive/content-class": {
    "type": "string",
    "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component"
  },
  "v-responsive/aspect-ratio": {
    "type": "string | number",
    "description": "Sets a base aspect ratio, calculated as width/height. This will only set a **minimum** height, the component can still grow if it has a lot of content"
  },
  "v-select/type": {
    "type": "string",
    "description": "Sets input type"
  },
  "v-select/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-select/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-select/reverse": {
    "type": "boolean",
    "description": "Reverses the input orientation"
  },
  "v-select/id": {
    "type": "string",
    "description": "Sets the DOM id on the component"
  },
  "v-select/items": {
    "type": "unknown[]",
    "description": "Can be an array of objects or array of strings. When using objects, will look for a title, value and disabled keys. This can be changed using the **item-title**, **item-value** and **item-disabled** props.  Objects that have a **header** or **divider** property are considered special cases and generate a list header or divider; these items are not selectable."
  },
  "v-select/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-select/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-select/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-select/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-select/variant": {
    "type": "\"outlined\" | \"plain\" | \"underlined\" | \"filled\" | \"solo\"",
    "description": "Applies a distinct style to the component"
  },
  "v-select/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-select/chips": {
    "type": "boolean",
    "description": "Changes display of selections to chips"
  },
  "v-select/closable-chips": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-select/eager": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-select/hide-no-data": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-select/hide-selected": {
    "type": "boolean",
    "description": "Do not display in the select menu items that are already selected"
  },
  "v-select/menu": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-select/menu-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-select.json))"
  },
  "v-select/menu-props": {
    "type": "unknown",
    "description": "Pass props through to the `v-menu` component. Accepts an object with anything from [/api/v-menu](/api/v-menu/#props), camelCase keys are recommended."
  },
  "v-select/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the input"
  },
  "v-select/transition": {
    "type": "string | { component: DefineComponent<{} & { target?: HTMLElement; } & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, () => JSX.Element, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, PublicProps, {} & { target?: HTMLElement; } & { $children?: Slot<[]> | VNodeChild | { default?: Slot<[]>; }; $slots?: { default?: Slot<[]>; }; 'v-slots'?: { default?: false | Slot<[]>; }; } & { \"v-slot:default\"?: false | Slot<[]>; }, {}> }",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-select/multiple": {
    "type": "boolean",
    "description": "Changes select to multiple. Accepts array for value"
  },
  "v-select/no-data-text": {
    "type": "string",
    "description": "Text shown when no items are provided to the component"
  },
  "v-select/open-on-clear": {
    "type": "boolean",
    "description": "When using the **clearable** prop, once cleared, the select menu will either open or stay open, depending on the current state"
  },
  "v-select/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-select/item-title": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-select/item-value": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "Set property of **items**'s value - **must be primitive**. Dot notation is supported. **Note:** This is currently not supported with `v-combobox` [GitHub Issue](https://github.com/vuetifyjs/vuetify/issues/5479)"
  },
  "v-select/item-children": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-select/item-props": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component."
  },
  "v-select/return-object": {
    "type": "boolean",
    "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**"
  },
  "v-select/autofocus": {
    "type": "boolean",
    "description": "Enables autofocus"
  },
  "v-select/hint": {
    "type": "string",
    "description": "Hint text"
  },
  "v-select/persistent-hint": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-select/prefix": {
    "type": "string",
    "description": "Displays prefix text"
  },
  "v-select/placeholder": {
    "type": "string",
    "description": "Sets the input’s placeholder text"
  },
  "v-select/persistent-placeholder": {
    "type": "boolean",
    "description": "Forces placeholder to always be visible"
  },
  "v-select/persistent-counter": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-select/suffix": {
    "type": "string",
    "description": "Displays suffix text"
  },
  "v-select/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-select/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`"
  },
  "v-select/messages": {
    "type": "string | string[]",
    "description": "Displays a list of messages or message if using a string"
  },
  "v-select/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-select/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-select/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-select/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-select/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-select/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-select/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-select/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-select/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-select/clearable": {
    "type": "boolean",
    "description": "Allows for the component to be cleared"
  },
  "v-select/clear-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Applied when using **clearable** and the input is dirty"
  },
  "v-select/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-select/persistent-clear": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-select/prepend-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon inside the component's input, uses the same syntax as `v-icon`"
  },
  "v-select/single-line": {
    "type": "boolean",
    "description": "Label does not move on focus/dirty"
  },
  "v-select/loading": {
    "type": "string | boolean",
    "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-select/counter": {
    "type": "string | number | true",
    "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation."
  },
  "v-select/counter-value": {
    "type": "(value: any) => number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-selection-control/type": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-selection-control/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-selection-control/value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-selection-control/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control/error": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control/model-value": {
    "type": "unknown",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-selection-control/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-selection-control/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-selection-control/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-selection-control/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-selection-control/multiple": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-selection-control/readonly": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control/inline": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-selection-control/true-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-selection-control/false-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-selection-control/false-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control/true-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control-group/type": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control-group/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-selection-control-group/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-selection-control-group/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control-group/error": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control-group/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-selection-control-group/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-selection-control-group/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-selection-control-group/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-selection-control-group/multiple": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control-group/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-selection-control-group/readonly": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control-group/inline": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control-group/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-selection-control-group/false-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control-group/true-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-selection-control-group/defaults-target": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-sheet/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-sheet/position": {
    "type": "\"relative\" | \"absolute\" | \"static\" | \"fixed\" | \"sticky\"",
    "description": "Specifies the type of positioning method used for the component."
  },
  "v-sheet/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/location.json))"
  },
  "v-sheet/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-sheet/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-sheet/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-sheet/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-sheet/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-sheet/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-sheet/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-sheet/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-sheet/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-sheet/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-sheet/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-slide-group/symbol": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-slide-group.json))"
  },
  "v-slide-group/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-slide-group/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-slide-group/disabled": {
    "type": "boolean",
    "description": "Puts all children components into a disabled state"
  },
  "v-slide-group/multiple": {
    "type": "boolean",
    "description": "Allows one to select mulitple items."
  },
  "v-slide-group/direction": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-slide-group.json))"
  },
  "v-slide-group/max": {
    "type": "number",
    "description": "Sets a maximum number of selections that can be made."
  },
  "v-slide-group/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-slide-group/mandatory": {
    "type": "boolean | \"force\"",
    "description": "Forces at least one item to always be selected (if available)."
  },
  "v-slide-group/show-arrows": {
    "type": "string | boolean",
    "description": "Change when the overflow arrow indicators are shown. By **default**, arrows *always* display on Desktop when the container is overflowing. When the container overflows on mobile, arrows are not shown by default. A **show-arrows** value of `true` allows these arrows to show on Mobile if the container overflowing. A value of `desktop` *always* displays arrows on Desktop while a value of `mobile` always displays arrows on Mobile. A value of `always` always displays arrows on Desktop *and* Mobile. Find more information on how to customize breakpoint thresholds on the [breakpoints page](/customizing/breakpoints)."
  },
  "v-slide-group/prev-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The prepended slot when arrows are shown"
  },
  "v-slide-group/next-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "The appended slot when arrows are shown"
  },
  "v-slide-group/center-active": {
    "type": "boolean",
    "description": "Forces the selected component to be centered"
  },
  "v-slide-group-item/value": {
    "type": "any",
    "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used."
  },
  "v-slide-group-item/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-slide-group-item/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-slider/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-slider/reverse": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-slider/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-slider/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-slider/model-value": {
    "type": "string | number",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-slider/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-slider/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-slider/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-slider/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-slider/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-slider/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-slider/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-slider/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the component, uses the same syntax as `v-icon`"
  },
  "v-slider/messages": {
    "type": "string | string[]",
    "description": "Displays a list of messages or message if using a string"
  },
  "v-slider/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-slider/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-slider/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-slider/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-slider/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-slider/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-slider/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-slider/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-slider/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-slider/max": {
    "type": "string | number",
    "description": "Sets the maximum allowed value"
  },
  "v-slider/min": {
    "type": "string | number",
    "description": "Sets the minimum allowed value"
  },
  "v-slider/step": {
    "type": "string | number",
    "description": "If greater than 0, sets step interval for ticks"
  },
  "v-slider/thumb-color": {
    "type": "string",
    "description": "Sets the thumb and thumb label color"
  },
  "v-slider/thumb-label": {
    "type": "boolean | \"always\"",
    "description": "Show thumb label. If `true` it shows label when using slider. If set to `'always'` it always shows label."
  },
  "v-slider/thumb-size": {
    "type": "string | number",
    "description": "Controls the size of the thumb label."
  },
  "v-slider/show-ticks": {
    "type": "boolean | \"always\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-slider/ticks": {
    "type": "number[] | Record<number, string>",
    "description": "Show track ticks. If `true` it shows ticks when using slider. If set to `'always'` it always shows ticks."
  },
  "v-slider/tick-size": {
    "type": "string | number",
    "description": "Controls the size of **ticks**"
  },
  "v-slider/track-color": {
    "type": "string",
    "description": "Sets the track's color"
  },
  "v-slider/track-fill-color": {
    "type": "string",
    "description": "Sets the track's fill color"
  },
  "v-slider/track-size": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/slider.json))"
  },
  "v-snackbar/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-snackbar/z-index": {
    "type": "string | number",
    "description": "The z-index used for the component"
  },
  "v-snackbar/position": {
    "type": "\"relative\" | \"absolute\" | \"static\" | \"fixed\" | \"sticky\"",
    "description": "Specifies the type of positioning method used for the component."
  },
  "v-snackbar/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-snackbar/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "Aligns the component towards the `top`, `bottom`, `right`, `left`, can be combined like for example `top right`"
  },
  "v-snackbar/absolute": {
    "type": "boolean",
    "description": "Applies **position: absolute** to the content element."
  },
  "v-snackbar/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-snackbar/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-snackbar/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-snackbar/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-snackbar/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-snackbar/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-snackbar/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-snackbar/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-snackbar/variant": {
    "type": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\"",
    "description": "Applies a distinct style to the component"
  },
  "v-snackbar/eager": {
    "type": "boolean",
    "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO."
  },
  "v-snackbar/activator": {
    "type": "string | ComponentPublicInstance | Element",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-snackbar/close-on-back": {
    "type": "boolean",
    "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing."
  },
  "v-snackbar/contained": {
    "type": "boolean",
    "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`."
  },
  "v-snackbar/content-class": {
    "type": "any",
    "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component"
  },
  "v-snackbar/content-props": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-snackbar/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-snackbar/activator-props": {
    "type": "{  }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-snackbar/open-on-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-snackbar/open-on-hover": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-snackbar/open-on-focus": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-snackbar/close-on-content-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-snackbar/close-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before closing component. Only applies to hover and focus events."
  },
  "v-snackbar/open-delay": {
    "type": "string | number",
    "description": "Milliseconds to wait before opening component. Only applies to hover and focus events."
  },
  "v-snackbar/location-strategy": {
    "type": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-snackbar/origin": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-snackbar/offset": {
    "type": "string | number | number[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-snackbar/transition": {
    "type": "string",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-snackbar/attach": {
    "type": "string | boolean | Element",
    "description": "Specifies which DOM element that this component should detach to. String can be any valid querySelector and Object can be any valid Node. This attaches to the root `v-app` component by default"
  },
  "v-snackbar/vertical": {
    "type": "boolean",
    "description": "Stacks snackbar content on top of the actions (button)."
  },
  "v-snackbar/multi-line": {
    "type": "boolean",
    "description": "Gives the snackbar a larger minimum height."
  },
  "v-snackbar/timeout": {
    "type": "string | number",
    "description": "Time (in milliseconds) to wait until snackbar is automatically hidden.  Use `-1` to keep open indefinitely (`0` in version < 2.3 ). It is recommended for this number to be between `4000` and `10000`. Changes to this property will reset the timeout."
  },
  "v-switch/type": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-switch/flat": {
    "type": "boolean",
    "description": "Display component without elevation. Default elevation for thumb is 4dp, `flat` resets it"
  },
  "v-switch/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-switch/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-switch/value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-switch/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-switch/error": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-switch/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-switch/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-switch/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-switch/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-switch/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-switch/multiple": {
    "type": "boolean",
    "description": "Changes expected model to an array"
  },
  "v-switch/value-comparator": {
    "type": "(a: any, b: any) => boolean",
    "description": "Apply a custom comparison algorithm used for values"
  },
  "v-switch/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-switch/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the component, uses the same syntax as `v-icon`"
  },
  "v-switch/messages": {
    "type": "string | string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-switch/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-switch/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-switch/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-switch/readonly": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-switch/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-switch/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-switch/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-switch/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-switch/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-switch/loading": {
    "type": "string | boolean",
    "description": "Displays circular progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-switch/inline": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-switch/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-switch/indeterminate": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-switch.json))"
  },
  "v-switch/true-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-switch/false-value": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control.json))"
  },
  "v-switch/false-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-switch/true-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-selection-control-group.json))"
  },
  "v-switch/inset": {
    "type": "boolean",
    "description": "Enlarge the `v-switch` track to encompass the thumb"
  },
  "v-system-bar/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-system-bar/name": {
    "type": "string",
    "description": "Assign a specific name for layout registration."
  },
  "v-system-bar/absolute": {
    "type": "boolean",
    "description": "Applies **position: absolute** to the component."
  },
  "v-system-bar/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-system-bar/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-system-bar/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-system-bar/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-system-bar/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-system-bar/order": {
    "type": "string | number",
    "description": "Adjust the order of the component in relation to its registration order."
  },
  "v-system-bar/window": {
    "type": "boolean",
    "description": "Increases the system bar height to 32px (24px default)."
  },
  "v-tabs/items": {
    "type": "(string | Record<string, any>)[]",
    "description": "The items to display in the component. This can be an array of strings or objects with a property `title`"
  },
  "v-tabs/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-tabs/color": {
    "type": "string",
    "description": "Applies specified color to the selected tab - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-tabs/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-tabs/height": {
    "type": "string | number",
    "description": "Sets the height of the tabs bar"
  },
  "v-tabs/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-tabs/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "Changes the direction of the tabs. Can be either `horizontal` or `vertical`."
  },
  "v-tabs/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-tabs/stacked": {
    "type": "boolean",
    "description": "Apply the stacked prop to all children v-tab components."
  },
  "v-tabs/grow": {
    "type": "boolean",
    "description": "Force `v-tab`'s to take up all available space"
  },
  "v-tabs/mandatory": {
    "type": "boolean | \"force\"",
    "description": "Forces at least one item to always be selected (if available)."
  },
  "v-tabs/fixed-tabs": {
    "type": "boolean",
    "description": "`v-tabs-item` min-width 160px, max-width 360px"
  },
  "v-tabs/hide-slider": {
    "type": "boolean",
    "description": "Hide's the generated `v-tabs-slider`"
  },
  "v-tabs/slider-color": {
    "type": "string",
    "description": "Changes the background color of an auto-generated `v-tabs-slider`"
  },
  "v-tabs/align-tabs": {
    "type": "\"title\" | \"end\" | \"start\" | \"center\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-tabs.json))"
  },
  "v-tab/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-tab/value": {
    "type": "any",
    "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used."
  },
  "v-tab/title": {
    "type": "string",
    "description": "Specify a title text for the component."
  },
  "v-tab/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-tab/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-tab/icon": {
    "type": "boolean | string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon using the [v-icon](/components/icons/) component."
  },
  "v-tab/fixed": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-tab.json))"
  },
  "v-tab/replace": {
    "type": "boolean",
    "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [**replace** prop](https://router.vuejs.org/api/#replace) on the vue-router documentation."
  },
  "v-tab/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-tab/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-tab/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content"
  },
  "v-tab/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-tab.json))"
  },
  "v-tab/stacked": {
    "type": "boolean",
    "description": "Displays the tab as a flex-column."
  },
  "v-tab/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-tab/href": {
    "type": "string",
    "description": "Designates the component as anchor and applies the **href** attribute."
  },
  "v-tab/exact": {
    "type": "boolean",
    "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation."
  },
  "v-tab/to": {
    "type": "unknown",
    "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation."
  },
  "v-tab/ripple": {
    "type": "boolean",
    "description": "Applies the [v-ripple](/directives/ripple) directive."
  },
  "v-tab/hide-slider": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-tab.json))"
  },
  "v-tab/slider-color": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-tab.json))"
  },
  "v-table/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-table/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-table/height": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-table.json))"
  },
  "v-table/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-table/hover": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-table.json))"
  },
  "v-table/fixed-header": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-table.json))"
  },
  "v-table/fixed-footer": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-table.json))"
  },
  "v-textarea/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-textarea/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-textarea/reverse": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-textarea/id": {
    "type": "string",
    "description": "Sets the DOM id on the component"
  },
  "v-textarea/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-textarea/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-textarea/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-textarea/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-textarea/variant": {
    "type": "\"outlined\" | \"plain\" | \"underlined\" | \"filled\" | \"solo\"",
    "description": "Applies a distinct style to the component"
  },
  "v-textarea/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-textarea/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the input"
  },
  "v-textarea/autofocus": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/hint": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/persistent-hint": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/prefix": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/placeholder": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/persistent-placeholder": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/persistent-counter": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/suffix": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-textarea/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the component, uses the same syntax as `v-icon`"
  },
  "v-textarea/messages": {
    "type": "string | string[]",
    "description": "Displays a list of messages or message if using a string"
  },
  "v-textarea/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-textarea/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-textarea/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-textarea/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-textarea/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-textarea/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-textarea/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-textarea/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-textarea/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-textarea/append-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot"
  },
  "v-textarea/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-textarea/clearable": {
    "type": "boolean",
    "description": "Allows for the component to be cleared"
  },
  "v-textarea/clear-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-textarea/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-textarea/dirty": {
    "type": "boolean",
    "description": "Manually apply the dirty state styling"
  },
  "v-textarea/persistent-clear": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-textarea/prepend-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot"
  },
  "v-textarea/single-line": {
    "type": "boolean",
    "description": "Label does not move on focus/dirty"
  },
  "v-textarea/loading": {
    "type": "string | boolean",
    "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-textarea/counter": {
    "type": "string | number | true",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/counter-value": {
    "type": "(value: any) => number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-textarea/auto-grow": {
    "type": "boolean",
    "description": "Automatically grow the textarea depending on amount of text"
  },
  "v-textarea/no-resize": {
    "type": "boolean",
    "description": "Remove resize handle"
  },
  "v-textarea/rows": {
    "type": "string | number",
    "description": "Default row count"
  },
  "v-textarea/max-rows": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-textarea.json))"
  },
  "v-text-field/type": {
    "type": "string",
    "description": "Sets input type"
  },
  "v-text-field/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-text-field/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-text-field/reverse": {
    "type": "boolean",
    "description": "Reverses the input orientation"
  },
  "v-text-field/id": {
    "type": "string",
    "description": "Sets the DOM id on the component"
  },
  "v-text-field/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-text-field/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-text-field/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-text-field/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-text-field/variant": {
    "type": "\"outlined\" | \"plain\" | \"underlined\" | \"filled\" | \"solo\"",
    "description": "Applies a distinct style to the component"
  },
  "v-text-field/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-text-field/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the input"
  },
  "v-text-field/autofocus": {
    "type": "boolean",
    "description": "Enables autofocus"
  },
  "v-text-field/hint": {
    "type": "string",
    "description": "Hint text"
  },
  "v-text-field/persistent-hint": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-text-field/prefix": {
    "type": "string",
    "description": "Displays prefix text"
  },
  "v-text-field/placeholder": {
    "type": "string",
    "description": "Sets the input’s placeholder text"
  },
  "v-text-field/persistent-placeholder": {
    "type": "boolean",
    "description": "Forces placeholder to always be visible"
  },
  "v-text-field/persistent-counter": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-text-field/suffix": {
    "type": "string",
    "description": "Displays suffix text"
  },
  "v-text-field/append-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot"
  },
  "v-text-field/prepend-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`"
  },
  "v-text-field/messages": {
    "type": "string | string[]",
    "description": "Displays a list of messages or message if using a string"
  },
  "v-text-field/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-input.json))"
  },
  "v-text-field/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-text-field/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-text-field/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-text-field/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-text-field/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-text-field/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-text-field/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-text-field/hide-details": {
    "type": "boolean | \"auto\"",
    "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display"
  },
  "v-text-field/append-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot"
  },
  "v-text-field/bg-color": {
    "type": "string",
    "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-text-field/clearable": {
    "type": "boolean",
    "description": "Allows for the component to be cleared"
  },
  "v-text-field/clear-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Applied when using **clearable** and the input is dirty"
  },
  "v-text-field/active": {
    "type": "boolean",
    "description": "Controls the **active** state of the item. This is typically used to highlight the component"
  },
  "v-text-field/dirty": {
    "type": "boolean",
    "description": "Manually apply the dirty state styling"
  },
  "v-text-field/persistent-clear": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-field.json))"
  },
  "v-text-field/prepend-inner-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Prepends an icon inside the component's input, uses the same syntax as `v-icon`"
  },
  "v-text-field/single-line": {
    "type": "boolean",
    "description": "Label does not move on focus/dirty"
  },
  "v-text-field/loading": {
    "type": "string | boolean",
    "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color"
  },
  "v-text-field/counter": {
    "type": "string | number | true",
    "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation."
  },
  "v-text-field/counter-value": {
    "type": "(value: any) => number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-text-field.json))"
  },
  "v-theme-provider/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-theme-provider/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-theme-provider/with-background": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-theme-provider.json))"
  },
  "v-timeline/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-timeline/density": {
    "type": "\"default\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-timeline/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-timeline/direction": {
    "type": "\"horizontal\" | \"vertical\"",
    "description": "Display timeline in a **vertical** or **horizontal** direction"
  },
  "v-timeline/align": {
    "type": "\"start\" | \"center\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))"
  },
  "v-timeline/justify": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))"
  },
  "v-timeline/line-color": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))"
  },
  "v-timeline/line-inset": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))"
  },
  "v-timeline/line-thickness": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))"
  },
  "v-timeline/side": {
    "type": "\"end\" | \"start\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline.json))"
  },
  "v-timeline/truncate-line": {
    "type": "\"end\" | \"start\" | \"both\"",
    "description": "Truncate timeline directly at the **start** or **end** of the line, or on **both** ends"
  },
  "v-timeline-item/size": {
    "type": "string | number",
    "description": "Size of the item dot"
  },
  "v-timeline-item/density": {
    "type": "\"default\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-timeline-item/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-timeline-item/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-timeline-item/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-timeline-item/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-timeline-item/icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Apply a specific icon to the inside dot using the [v-icon](/components/icons/) component."
  },
  "v-timeline-item/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-timeline-item/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-timeline-item/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-timeline-item/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-timeline-item/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-timeline-item/line-inset": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline-item.json))"
  },
  "v-timeline-item/dot-color": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-timeline-item.json))"
  },
  "v-timeline-item/fill-dot": {
    "type": "boolean",
    "description": "Remove outer border of item dot, making the color fill the entire dot"
  },
  "v-timeline-item/hide-dot": {
    "type": "boolean",
    "description": "Hide the timeline item dot"
  },
  "v-timeline-item/icon-color": {
    "type": "string",
    "description": "Color of the icon"
  },
  "v-timeline-item/hide-opposite": {
    "type": "boolean",
    "description": "Hide opposite content if it exists"
  },
  "v-toolbar/flat": {
    "type": "boolean",
    "description": "Removes the toolbar's box-shadow."
  },
  "v-toolbar/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-toolbar/image": {
    "type": "string",
    "description": "Specifies a [v-img](/components/images) as the component's background."
  },
  "v-toolbar/title": {
    "type": "string",
    "description": "Specify a title text for the component."
  },
  "v-toolbar/absolute": {
    "type": "boolean",
    "description": "Applies position: absolute to the component."
  },
  "v-toolbar/collapse": {
    "type": "boolean",
    "description": "Puts the toolbar into a collapsed state reducing its maximum width."
  },
  "v-toolbar/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-toolbar/density": {
    "type": "\"default\" | \"prominent\" | \"comfortable\" | \"compact\"",
    "description": "Adjusts the vertical height used by the component."
  },
  "v-toolbar/extended": {
    "type": "boolean",
    "description": "Use this prop to increase the height of the toolbar _without_ using the `extension` slot for adding content. May be used in conjunction with the **extension-height** prop, and any of the other props that affect the height of the toolbar, e.g. **prominent**, **dense**, etc., **WITH THE EXCEPTION** of **height**."
  },
  "v-toolbar/extension-height": {
    "type": "string | number",
    "description": "Specify an explicit height for the `extension` slot. "
  },
  "v-toolbar/floating": {
    "type": "boolean",
    "description": "Applies **display: inline-flex** to the component."
  },
  "v-toolbar/height": {
    "type": "string | number",
    "description": "Designates a specific height for the toolbar. Overrides the heights imposed by other props, e.g. **prominent**, **dense**, **extended**, etc."
  },
  "v-toolbar/border": {
    "type": "string | number | boolean",
    "description": "Applies border styles to component."
  },
  "v-toolbar/elevation": {
    "type": "string | number",
    "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
  },
  "v-toolbar/rounded": {
    "type": "string | number | boolean",
    "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius)."
  },
  "v-toolbar/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-toolbar-title/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-toolbar-title/text": {
    "type": "string",
    "description": "Specify content text for the component."
  },
  "v-toolbar-items/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-toolbar-items/variant": {
    "type": "string",
    "description": "Applies a distinct style to the component"
  },
  "v-tooltip/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-tooltip/z-index": {
    "type": "string | number",
    "description": "The z-index used for the component"
  },
  "v-tooltip/id": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-tooltip.json))"
  },
  "v-tooltip/model-value": {
    "type": "boolean",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-tooltip/location": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a>",
    "description": "Aligns the component towards the `top`, `bottom`, `right`, `left`, can be combined like for example `top right`"
  },
  "v-tooltip/height": {
    "type": "string | number",
    "description": "Sets the height for the component."
  },
  "v-tooltip/text": {
    "type": "string",
    "description": "Specify content text for the component."
  },
  "v-tooltip/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-tooltip/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-tooltip/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-tooltip/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-tooltip/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-tooltip/activator": {
    "type": "string | ComponentPublicInstance | Element",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-tooltip/close-on-back": {
    "type": "boolean",
    "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing."
  },
  "v-tooltip/contained": {
    "type": "boolean",
    "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`."
  },
  "v-tooltip/content-class": {
    "type": "any",
    "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component"
  },
  "v-tooltip/content-props": {
    "type": "any",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-tooltip/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-tooltip/no-click-animation": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-tooltip/scrim": {
    "type": "string | boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay.json))"
  },
  "v-tooltip/activator-props": {
    "type": "{  }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-tooltip/open-on-click": {
    "type": "boolean",
    "description": "Designates whether the tooltip should open on activator click"
  },
  "v-tooltip/open-on-hover": {
    "type": "boolean",
    "description": "Designates whether the tooltip should open on activator hover"
  },
  "v-tooltip/open-on-focus": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-tooltip/close-on-content-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-activator.json))"
  },
  "v-tooltip/close-delay": {
    "type": "string | number",
    "description": "Delay (in ms) after which menu closes (when open-on-hover prop is set to true)"
  },
  "v-tooltip/open-delay": {
    "type": "string | number",
    "description": "Delay (in ms) after which tooltip opens (when `open-on-hover` prop is set to **true**)"
  },
  "v-tooltip/location-strategy": {
    "type": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-tooltip/origin": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L7-L13\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-tooltip/offset": {
    "type": "string | number | number[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-location-strategies.json))"
  },
  "v-tooltip/scroll-strategy": {
    "type": "\"close\" | \"none\" | \"block\" | \"reposition\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-overlay-scroll-strategies.json))"
  },
  "v-tooltip/transition": {
    "type": "string | boolean",
    "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-tooltip/attach": {
    "type": "string | boolean | Element",
    "description": "Specifies which DOM element that this component should detach to. String can be any valid querySelector and Object can be any valid Node. This attaches to the root `v-app` component by default"
  },
  "v-validation/name": {
    "type": "string",
    "description": "Sets the component's name attribute."
  },
  "v-validation/error": {
    "type": "boolean",
    "description": "Puts the input in a manual error state"
  },
  "v-validation/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-validation/label": {
    "type": "string",
    "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component"
  },
  "v-validation/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-validation/error-messages": {
    "type": "string | string[]",
    "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation"
  },
  "v-validation/max-errors": {
    "type": "string | number",
    "description": "Control the maximum number of shown errors from validation."
  },
  "v-validation/readonly": {
    "type": "boolean",
    "description": "Puts input in readonly state"
  },
  "v-validation/rules": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]",
    "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`"
  },
  "v-validation/validate-on": {
    "type": "\"blur\" | \"input\" | \"submit\"",
    "description": "Change what type of event triggers validation to run."
  },
  "v-validation/validation-value": {
    "type": "any",
    "description": "The value used when applying validation rules."
  },
  "v-validation/focused": {
    "type": "boolean",
    "description": "Forces a focused state styling on the component."
  },
  "v-window/theme": {
    "type": "string",
    "description": "Specify a theme for this component and all of its children"
  },
  "v-window/reverse": {
    "type": "boolean",
    "description": "Reverse the normal transition direction."
  },
  "v-window/model-value": {
    "type": "any",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-window/tag": {
    "type": "string",
    "description": "Specify a custom tag used on the root element."
  },
  "v-window/disabled": {
    "type": "boolean",
    "description": "Removes the ability to click or target the component"
  },
  "v-window/direction": {
    "type": "string",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-window.json))"
  },
  "v-window/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-window/mandatory": {
    "type": "\"force\"",
    "description": "Forces at least one item to always be selected (if available)."
  },
  "v-window/show-arrows": {
    "type": "string | boolean",
    "description": "Display the \"next\" and \"prev\" buttons"
  },
  "v-window/prev-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Icon used for the \"prev\" button if `show-arrows` is `true`"
  },
  "v-window/next-icon": {
    "type": "string | (new () => any) | FunctionalComponent",
    "description": "Icon used for the \"next\" button if `show-arrows` is `true`"
  },
  "v-window/continuous": {
    "type": "boolean",
    "description": "If `true`, window will \"wrap around\" from the last item to the first, and from the first item to the last"
  },
  "v-window/touch": {
    "type": "any",
    "description": "Provide a custom **left** and **right** function when swiped left or right."
  },
  "v-window-item/value": {
    "type": "any",
    "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used."
  },
  "v-window-item/eager": {
    "type": "boolean",
    "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO."
  },
  "v-window-item/disabled": {
    "type": "boolean",
    "description": "Prevents the item from becoming active when using the \"next\" and \"prev\" buttons or the `toggle` method"
  },
  "v-window-item/transition": {
    "type": "string | boolean",
    "description": "The transition used when the component progressing through items. Can be one of the [built in](/styles/transitions/) or custom transition."
  },
  "v-window-item/selected-class": {
    "type": "string",
    "description": "Configure the active CSS class applied when an item is selected."
  },
  "v-window-item/reverse-transition": {
    "type": "string | boolean",
    "description": "Sets the reverse transition"
  },
  "v-dialog-transition/target": {
    "type": "HTMLElement",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/v-dialog-transition.json))"
  },
  "v-fab-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-fab-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-fab-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-fab-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-fab-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-dialog-bottom-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-dialog-bottom-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-dialog-bottom-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-dialog-bottom-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-dialog-bottom-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-dialog-top-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-dialog-top-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-dialog-top-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-dialog-top-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-dialog-top-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-fade-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-fade-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-fade-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-fade-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-fade-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-scale-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-scale-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-scale-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-scale-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-scale-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-scroll-x-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-scroll-x-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-scroll-x-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-scroll-x-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-scroll-x-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-scroll-x-reverse-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-scroll-x-reverse-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-scroll-x-reverse-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-scroll-x-reverse-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-scroll-x-reverse-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-scroll-y-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-scroll-y-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-scroll-y-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-scroll-y-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-scroll-y-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-scroll-y-reverse-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-scroll-y-reverse-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-scroll-y-reverse-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-scroll-y-reverse-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-scroll-y-reverse-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-slide-x-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-slide-x-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-slide-x-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-slide-x-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-slide-x-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-slide-x-reverse-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-slide-x-reverse-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-slide-x-reverse-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-slide-x-reverse-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-slide-x-reverse-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-slide-y-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-slide-y-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-slide-y-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-slide-y-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-slide-y-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-slide-y-reverse-transition/origin": {
    "type": "string",
    "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
  },
  "v-slide-y-reverse-transition/mode": {
    "type": "string",
    "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/v2/api/#transition)."
  },
  "v-slide-y-reverse-transition/group": {
    "type": "boolean",
    "description": "Creates a `transition-group` component. [vue docs](https://vuejs.org/v2/api/#transition-group)"
  },
  "v-slide-y-reverse-transition/hide-on-leave": {
    "type": "boolean",
    "description": "Hides the leaving element (no exit animation)"
  },
  "v-slide-y-reverse-transition/leave-absolute": {
    "type": "boolean",
    "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/))"
  },
  "v-expand-transition/mode": {
    "type": "\"default\" | \"in-out\" | \"out-in\"",
    "description": "Sets the transition mode (does not apply to transition-group)."
  },
  "v-expand-x-transition/mode": {
    "type": "\"default\" | \"in-out\" | \"out-in\"",
    "description": "Sets the transition mode (does not apply to transition-group)."
  },
  "v-data-table/items": {
    "type": "any[]",
    "description": "An array of strings or objects used for automatically generating children components"
  },
  "v-data-table/model-value": {
    "type": "any[]",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-data-table/height": {
    "type": "string | number",
    "description": "Set an explicit height of table"
  },
  "v-data-table/width": {
    "type": "string | number",
    "description": "Sets the width for the component"
  },
  "v-data-table/search": {
    "type": "string",
    "description": "Text input used to filter items"
  },
  "v-data-table/filter-mode": {
    "type": "\"every\" | \"some\" | \"union\" | \"intersection\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-data-table/no-filter": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-data-table/custom-filter": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L20-L20\" target=\"_blank\">FilterFunction</a>",
    "description": "Function to filter items"
  },
  "v-data-table/custom-key-filter": {
    "type": "{ [string]: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L20-L20\" target=\"_blank\">FilterFunction</a> }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-data-table/filter-keys": {
    "type": "string | string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-data-table/hide-no-data": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table/no-data-text": {
    "type": "string",
    "description": "Text shown when no items are provided to the component"
  },
  "v-data-table/item-title": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table/item-value": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table/item-children": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table/item-props": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component."
  },
  "v-data-table/return-object": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table/fixed-header": {
    "type": "boolean",
    "description": "Fixed header to top of table"
  },
  "v-data-table/fixed-footer": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table/headers": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L6-L23\" target=\"_blank\">DataTableHeader</a>[] | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L6-L23\" target=\"_blank\">DataTableHeader</a>[][]",
    "description": "An array of objects that each describe a header column. See the example below for a definition of all properties"
  },
  "v-data-table/expand-on-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table/show-expand": {
    "type": "boolean",
    "description": "Shows the expand toggle in default rows"
  },
  "v-data-table/expanded": {
    "type": "string[]",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table/group-by": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L27-L27\" target=\"_blank\">SortItem</a>[]",
    "description": "Changes which item property should be used for grouping items. Currently only supports a single grouping in the format: `group` or `['group']`. When using an array, only the first element is considered. Can be used with `.sync` modifier"
  },
  "v-data-table/show-select": {
    "type": "boolean",
    "description": "Shows the select checkboxes in both the header and rows (if using default rows)"
  },
  "v-data-table/sort-by": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L27-L27\" target=\"_blank\">SortItem</a>[]",
    "description": "Changes which item property (or properties) should be used for sort order. Can be used with `.sync` modifier"
  },
  "v-data-table/multi-sort": {
    "type": "boolean",
    "description": "If `true` then one can sort on multiple properties"
  },
  "v-data-table/must-sort": {
    "type": "boolean",
    "description": "If `true` then one can not disable sorting, it will always switch between ascending and descending"
  },
  "v-data-table/page": {
    "type": "string | number",
    "description": "The current displayed page number (1-indexed)"
  },
  "v-data-table/items-per-page": {
    "type": "string | number",
    "description": "Changes how many items per page should be visible. Can be used with `.sync` modifier. Setting this prop to `-1` will display all items on the page"
  },
  "v-data-table-rows/items": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L43-L43\" target=\"_blank\">InternalDataTableItem</a>[]",
    "description": "An array of strings or objects used for automatically generating children components"
  },
  "v-data-table-rows/hide-no-data": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-rows/no-data-text": {
    "type": "string",
    "description": "Text shown when no items are provided to the component"
  },
  "v-data-table-rows/loading": {
    "type": "string | boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-rows/row-height": {
    "type": "number",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-rows/loading-text": {
    "type": "string",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-row/item": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L32-L32\" target=\"_blank\">DataTableItem</a>",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-virtual/items": {
    "type": "any[]",
    "description": "An array of strings or objects used for automatically generating children components"
  },
  "v-data-table-virtual/model-value": {
    "type": "any[]",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-data-table-virtual/height": {
    "type": "string | number",
    "description": "Set an explicit height of table"
  },
  "v-data-table-virtual/width": {
    "type": "string | number",
    "description": "Sets the width for the component"
  },
  "v-data-table-virtual/search": {
    "type": "string",
    "description": "Text input used to filter items"
  },
  "v-data-table-virtual/filter-mode": {
    "type": "\"every\" | \"some\" | \"union\" | \"intersection\"",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-data-table-virtual/no-filter": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-data-table-virtual/custom-filter": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L20-L20\" target=\"_blank\">FilterFunction</a>",
    "description": "Function to filter items"
  },
  "v-data-table-virtual/custom-key-filter": {
    "type": "{ [string]: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L20-L20\" target=\"_blank\">FilterFunction</a> }",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-data-table-virtual/filter-keys": {
    "type": "string | string[]",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/filter.json))"
  },
  "v-data-table-virtual/hide-no-data": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-virtual/no-data-text": {
    "type": "string",
    "description": "Text shown when no items are provided to the component"
  },
  "v-data-table-virtual/item-title": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table-virtual/item-value": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table-virtual/item-children": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table-virtual/item-props": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component."
  },
  "v-data-table-virtual/return-object": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table-virtual/fixed-header": {
    "type": "boolean",
    "description": "Fixed header to top of table"
  },
  "v-data-table-virtual/fixed-footer": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-virtual/headers": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L6-L23\" target=\"_blank\">DataTableHeader</a>[] | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L6-L23\" target=\"_blank\">DataTableHeader</a>[][]",
    "description": "An array of objects that each describe a header column. See the example below for a definition of all properties"
  },
  "v-data-table-virtual/expand-on-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-virtual/show-expand": {
    "type": "boolean",
    "description": "Shows the expand toggle in default rows"
  },
  "v-data-table-virtual/expanded": {
    "type": "string[]",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-virtual/group-by": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L27-L27\" target=\"_blank\">SortItem</a>[]",
    "description": "Changes which item property should be used for grouping items. Currently only supports a single grouping in the format: `group` or `['group']`. When using an array, only the first element is considered. Can be used with `.sync` modifier"
  },
  "v-data-table-virtual/show-select": {
    "type": "boolean",
    "description": "Shows the select checkboxes in both the header and rows (if using default rows)"
  },
  "v-data-table-virtual/sort-by": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L27-L27\" target=\"_blank\">SortItem</a>[]",
    "description": "Changes which item property (or properties) should be used for sort order. Can be used with `.sync` modifier"
  },
  "v-data-table-virtual/multi-sort": {
    "type": "boolean",
    "description": "If `true` then one can sort on multiple properties"
  },
  "v-data-table-virtual/must-sort": {
    "type": "boolean",
    "description": "If `true` then one can not disable sorting, it will always switch between ascending and descending"
  },
  "v-data-table-virtual/visible-items": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-virtual/item-height": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-server/items": {
    "type": "any[]",
    "description": "An array of strings or objects used for automatically generating children components"
  },
  "v-data-table-server/model-value": {
    "type": "any[]",
    "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array"
  },
  "v-data-table-server/color": {
    "type": "string",
    "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)"
  },
  "v-data-table-server/height": {
    "type": "string | number",
    "description": "Set an explicit height of table"
  },
  "v-data-table-server/width": {
    "type": "string | number",
    "description": "Sets the width for the component"
  },
  "v-data-table-server/hide-no-data": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-server/no-data-text": {
    "type": "string",
    "description": "Text shown when no items are provided to the component"
  },
  "v-data-table-server/item-title": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table-server/item-value": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table-server/item-children": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table-server/item-props": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L71-L75\" target=\"_blank\">SelectItemKey</a>",
    "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component."
  },
  "v-data-table-server/return-object": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree/master/packages/api-generator/src/locale/en/item.json))"
  },
  "v-data-table-server/loading": {
    "type": "string | boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-server/fixed-header": {
    "type": "boolean",
    "description": "Fixed header to top of table"
  },
  "v-data-table-server/fixed-footer": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-server/headers": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L6-L23\" target=\"_blank\">DataTableHeader</a>[] | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/types.ts#L6-L23\" target=\"_blank\">DataTableHeader</a>[][]",
    "description": "An array of objects that each describe a header column. See the example below for a definition of all properties"
  },
  "v-data-table-server/expand-on-click": {
    "type": "boolean",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-server/show-expand": {
    "type": "boolean",
    "description": "Shows the expand toggle in default rows"
  },
  "v-data-table-server/expanded": {
    "type": "string[]",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-server/group-by": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L27-L27\" target=\"_blank\">SortItem</a>[]",
    "description": "Changes which item property should be used for grouping items. Currently only supports a single grouping in the format: `group` or `['group']`. When using an array, only the first element is considered. Can be used with `.sync` modifier"
  },
  "v-data-table-server/show-select": {
    "type": "boolean",
    "description": "Shows the select checkboxes in both the header and rows (if using default rows)"
  },
  "v-data-table-server/sort-by": {
    "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/labs/VDataTable/composables/sort.ts#L27-L27\" target=\"_blank\">SortItem</a>[]",
    "description": "Changes which item property (or properties) should be used for sort order. Can be used with `.sync` modifier"
  },
  "v-data-table-server/multi-sort": {
    "type": "boolean",
    "description": "If `true` then one can sort on multiple properties"
  },
  "v-data-table-server/must-sort": {
    "type": "boolean",
    "description": "If `true` then one can not disable sorting, it will always switch between ascending and descending"
  },
  "v-data-table-server/page": {
    "type": "string | number",
    "description": "The current displayed page number (1-indexed)"
  },
  "v-data-table-server/items-per-page": {
    "type": "string | number",
    "description": "Changes how many items per page should be visible. Can be used with `.sync` modifier. Setting this prop to `-1` will display all items on the page"
  },
  "v-data-table-server/loading-text": {
    "type": "string",
    "description": "MISSING DESCRIPTION"
  },
  "v-data-table-server/items-length": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION"
  },
  "v-virtual-scroll/items": {
    "type": "unknown[]",
    "description": "The array of items to display"
  },
  "v-virtual-scroll/height": {
    "type": "string | number",
    "description": "Height of the component as a css value"
  },
  "v-virtual-scroll/max-height": {
    "type": "string | number",
    "description": "Sets the maximum height for the component."
  },
  "v-virtual-scroll/max-width": {
    "type": "string | number",
    "description": "Sets the maximum width for the component."
  },
  "v-virtual-scroll/min-height": {
    "type": "string | number",
    "description": "Sets the minimum height for the component."
  },
  "v-virtual-scroll/min-width": {
    "type": "string | number",
    "description": "Sets the minimum width for the component."
  },
  "v-virtual-scroll/width": {
    "type": "string | number",
    "description": "Sets the width for the component."
  },
  "v-virtual-scroll/visible-items": {
    "type": "string | number",
    "description": "MISSING DESCRIPTION"
  },
  "v-virtual-scroll/item-height": {
    "type": "string | number",
    "description": "Height in pixels of each item to display. When using **dynamic-item-height** this should be an average initial size."
  }
}